// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client.proto

package io.github.centrifugal.centrifuge.internal.protocol;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Error)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 code = 1;</code>
     * @return The code.
     */
    int getCode();

    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code protocol.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageLite<
          Error, Error.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Error)
      ErrorOrBuilder {
    private Error() {
      message_ = "";
    }
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>uint32 code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public int getCode() {
      return code_;
    }
    /**
     * <code>uint32 code = 1;</code>
     * @param value The code to set.
     */
    private void setCode(int value) {
      
      code_ = value;
    }
    /**
     * <code>uint32 code = 1;</code>
     */
    private void clearCode() {
      
      code_ = 0;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.String message_;
    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return message_;
    }
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(message_);
    }
    /**
     * <code>string message = 2;</code>
     * @param value The message to set.
     */
    private void setMessage(
        java.lang.String value) {
      value.getClass();
  
      message_ = value;
    }
    /**
     * <code>string message = 2;</code>
     */
    private void clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
    }
    /**
     * <code>string message = 2;</code>
     * @param value The bytes for message to set.
     */
    private void setMessageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      message_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Error)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ErrorOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <code>uint32 code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <code>uint32 code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        return instance.getMessage();
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        return instance.getMessageBytes();
      }
      /**
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setMessage(value);
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        copyOnWrite();
        instance.clearMessage();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Error)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "code_",
              "message_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u000b\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Error)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error DEFAULT_INSTANCE;
    static {
      Error defaultInstance = new Error();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Error.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Error> PARSER;

    public static com.google.protobuf.Parser<Error> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Command)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @return The enum numeric value on the wire for method.
     */
    int getMethodValue();
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @return The method.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType getMethod();

    /**
     * <code>bytes params = 3;</code>
     * @return The params.
     */
    com.google.protobuf.ByteString getParams();
  }
  /**
   * Protobuf type {@code protocol.Command}
   */
  public  static final class Command extends
      com.google.protobuf.GeneratedMessageLite<
          Command, Command.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Command)
      CommandOrBuilder {
    private Command() {
      params_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * Protobuf enum {@code protocol.Command.MethodType}
     */
    public enum MethodType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>CONNECT = 0;</code>
       */
      CONNECT(0),
      /**
       * <code>SUBSCRIBE = 1;</code>
       */
      SUBSCRIBE(1),
      /**
       * <code>UNSUBSCRIBE = 2;</code>
       */
      UNSUBSCRIBE(2),
      /**
       * <code>PUBLISH = 3;</code>
       */
      PUBLISH(3),
      /**
       * <code>PRESENCE = 4;</code>
       */
      PRESENCE(4),
      /**
       * <code>PRESENCE_STATS = 5;</code>
       */
      PRESENCE_STATS(5),
      /**
       * <code>HISTORY = 6;</code>
       */
      HISTORY(6),
      /**
       * <code>PING = 7;</code>
       */
      PING(7),
      /**
       * <code>SEND = 8;</code>
       */
      SEND(8),
      /**
       * <code>RPC = 9;</code>
       */
      RPC(9),
      /**
       * <code>REFRESH = 10;</code>
       */
      REFRESH(10),
      /**
       * <code>SUB_REFRESH = 11;</code>
       */
      SUB_REFRESH(11),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>CONNECT = 0;</code>
       */
      public static final int CONNECT_VALUE = 0;
      /**
       * <code>SUBSCRIBE = 1;</code>
       */
      public static final int SUBSCRIBE_VALUE = 1;
      /**
       * <code>UNSUBSCRIBE = 2;</code>
       */
      public static final int UNSUBSCRIBE_VALUE = 2;
      /**
       * <code>PUBLISH = 3;</code>
       */
      public static final int PUBLISH_VALUE = 3;
      /**
       * <code>PRESENCE = 4;</code>
       */
      public static final int PRESENCE_VALUE = 4;
      /**
       * <code>PRESENCE_STATS = 5;</code>
       */
      public static final int PRESENCE_STATS_VALUE = 5;
      /**
       * <code>HISTORY = 6;</code>
       */
      public static final int HISTORY_VALUE = 6;
      /**
       * <code>PING = 7;</code>
       */
      public static final int PING_VALUE = 7;
      /**
       * <code>SEND = 8;</code>
       */
      public static final int SEND_VALUE = 8;
      /**
       * <code>RPC = 9;</code>
       */
      public static final int RPC_VALUE = 9;
      /**
       * <code>REFRESH = 10;</code>
       */
      public static final int REFRESH_VALUE = 10;
      /**
       * <code>SUB_REFRESH = 11;</code>
       */
      public static final int SUB_REFRESH_VALUE = 11;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MethodType valueOf(int value) {
        return forNumber(value);
      }

      public static MethodType forNumber(int value) {
        switch (value) {
          case 0: return CONNECT;
          case 1: return SUBSCRIBE;
          case 2: return UNSUBSCRIBE;
          case 3: return PUBLISH;
          case 4: return PRESENCE;
          case 5: return PRESENCE_STATS;
          case 6: return HISTORY;
          case 7: return PING;
          case 8: return SEND;
          case 9: return RPC;
          case 10: return REFRESH;
          case 11: return SUB_REFRESH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MethodType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MethodType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MethodType>() {
              @java.lang.Override
              public MethodType findValueByNumber(int number) {
                return MethodType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return MethodTypeVerifier.INSTANCE;
      }

      private static final class MethodTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new MethodTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return MethodType.forNumber(number) != null;
              }
            };

      private final int value;

      private MethodType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Command.MethodType)
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <code>uint32 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <code>uint32 id = 1;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private int method_;
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @return The enum numeric value on the wire for method.
     */
    @java.lang.Override
    public int getMethodValue() {
      return method_;
    }
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @return The method.
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType getMethod() {
      io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType result = io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType.forNumber(method_);
      return result == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType.UNRECOGNIZED : result;
    }
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @param value The enum numeric value on the wire for method to set.
     */
    private void setMethodValue(int value) {
        method_ = value;
    }
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     * @param value The method to set.
     */
    private void setMethod(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType value) {
      method_ = value.getNumber();
      
    }
    /**
     * <code>.protocol.Command.MethodType method = 2;</code>
     */
    private void clearMethod() {
      
      method_ = 0;
    }

    public static final int PARAMS_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString params_;
    /**
     * <code>bytes params = 3;</code>
     * @return The params.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getParams() {
      return params_;
    }
    /**
     * <code>bytes params = 3;</code>
     * @param value The params to set.
     */
    private void setParams(com.google.protobuf.ByteString value) {
      value.getClass();
  
      params_ = value;
    }
    /**
     * <code>bytes params = 3;</code>
     */
    private void clearParams() {
      
      params_ = getDefaultInstance().getParams();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Command}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Command)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.CommandOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }
      /**
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>.protocol.Command.MethodType method = 2;</code>
       * @return The enum numeric value on the wire for method.
       */
      @java.lang.Override
      public int getMethodValue() {
        return instance.getMethodValue();
      }
      /**
       * <code>.protocol.Command.MethodType method = 2;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodValue(int value) {
        copyOnWrite();
        instance.setMethodValue(value);
        return this;
      }
      /**
       * <code>.protocol.Command.MethodType method = 2;</code>
       * @return The method.
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType getMethod() {
        return instance.getMethod();
      }
      /**
       * <code>.protocol.Command.MethodType method = 2;</code>
       * @param value The enum numeric value on the wire for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.MethodType value) {
        copyOnWrite();
        instance.setMethod(value);
        return this;
      }
      /**
       * <code>.protocol.Command.MethodType method = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }

      /**
       * <code>bytes params = 3;</code>
       * @return The params.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getParams() {
        return instance.getParams();
      }
      /**
       * <code>bytes params = 3;</code>
       * @param value The params to set.
       * @return This builder for chaining.
       */
      public Builder setParams(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setParams(value);
        return this;
      }
      /**
       * <code>bytes params = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParams() {
        copyOnWrite();
        instance.clearParams();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Command)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "id_",
              "method_",
              "params_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0002\f" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Command)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command DEFAULT_INSTANCE;
    static {
      Command defaultInstance = new Command();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Command.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Command getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Command> PARSER;

    public static com.google.protobuf.Parser<Command> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Reply)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>.protocol.Error error = 2;</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <code>.protocol.Error error = 2;</code>
     * @return The error.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error getError();

    /**
     * <code>bytes result = 3;</code>
     * @return The result.
     */
    com.google.protobuf.ByteString getResult();
  }
  /**
   * Protobuf type {@code protocol.Reply}
   */
  public  static final class Reply extends
      com.google.protobuf.GeneratedMessageLite<
          Reply, Reply.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Reply)
      ReplyOrBuilder {
    private Reply() {
      result_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <code>uint32 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <code>uint32 id = 1;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public static final int ERROR_FIELD_NUMBER = 2;
    private io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error error_;
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    @java.lang.Override
    public boolean hasError() {
      return error_ != null;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error getError() {
      return error_ == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.getDefaultInstance() : error_;
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    private void setError(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error value) {
      value.getClass();
  error_ = value;
      
      }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeError(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error value) {
      value.getClass();
  if (error_ != null &&
          error_ != io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.getDefaultInstance()) {
        error_ =
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.newBuilder(error_).mergeFrom(value).buildPartial();
      } else {
        error_ = value;
      }
      
    }
    /**
     * <code>.protocol.Error error = 2;</code>
     */
    private void clearError() {  error_ = null;
      
    }

    public static final int RESULT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString result_;
    /**
     * <code>bytes result = 3;</code>
     * @return The result.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getResult() {
      return result_;
    }
    /**
     * <code>bytes result = 3;</code>
     * @param value The result to set.
     */
    private void setResult(com.google.protobuf.ByteString value) {
      value.getClass();
  
      result_ = value;
    }
    /**
     * <code>bytes result = 3;</code>
     */
    private void clearResult() {
      
      result_ = getDefaultInstance().getResult();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Reply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Reply)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ReplyOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }
      /**
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>.protocol.Error error = 2;</code>
       */
      @java.lang.Override
      public boolean hasError() {
        return instance.hasError();
      }
      /**
       * <code>.protocol.Error error = 2;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error getError() {
        return instance.getError();
      }
      /**
       * <code>.protocol.Error error = 2;</code>
       */
      public Builder setError(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error value) {
        copyOnWrite();
        instance.setError(value);
        return this;
        }
      /**
       * <code>.protocol.Error error = 2;</code>
       */
      public Builder setError(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error.Builder builderForValue) {
        copyOnWrite();
        instance.setError(builderForValue.build());
        return this;
      }
      /**
       * <code>.protocol.Error error = 2;</code>
       */
      public Builder mergeError(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Error value) {
        copyOnWrite();
        instance.mergeError(value);
        return this;
      }
      /**
       * <code>.protocol.Error error = 2;</code>
       */
      public Builder clearError() {  copyOnWrite();
        instance.clearError();
        return this;
      }

      /**
       * <code>bytes result = 3;</code>
       * @return The result.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getResult() {
        return instance.getResult();
      }
      /**
       * <code>bytes result = 3;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setResult(value);
        return this;
      }
      /**
       * <code>bytes result = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        copyOnWrite();
        instance.clearResult();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Reply)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "id_",
              "error_",
              "result_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0002\t" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Reply)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply DEFAULT_INSTANCE;
    static {
      Reply defaultInstance = new Reply();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Reply.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Reply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Reply> PARSER;

    public static com.google.protobuf.Parser<Reply> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PushOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Push)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @return The type.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType getType();

    /**
     * <code>string channel = 2;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 2;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.Push}
   */
  public  static final class Push extends
      com.google.protobuf.GeneratedMessageLite<
          Push, Push.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Push)
      PushOrBuilder {
    private Push() {
      channel_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    /**
     * Protobuf enum {@code protocol.Push.PushType}
     */
    public enum PushType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>PUBLICATION = 0;</code>
       */
      PUBLICATION(0),
      /**
       * <code>JOIN = 1;</code>
       */
      JOIN(1),
      /**
       * <code>LEAVE = 2;</code>
       */
      LEAVE(2),
      /**
       * <code>UNSUBSCRIBE = 3;</code>
       */
      UNSUBSCRIBE(3),
      /**
       * <code>MESSAGE = 4;</code>
       */
      MESSAGE(4),
      /**
       * <code>SUBSCRIBE = 5;</code>
       */
      SUBSCRIBE(5),
      /**
       * <code>CONNECT = 6;</code>
       */
      CONNECT(6),
      /**
       * <code>DISCONNECT = 7;</code>
       */
      DISCONNECT(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PUBLICATION = 0;</code>
       */
      public static final int PUBLICATION_VALUE = 0;
      /**
       * <code>JOIN = 1;</code>
       */
      public static final int JOIN_VALUE = 1;
      /**
       * <code>LEAVE = 2;</code>
       */
      public static final int LEAVE_VALUE = 2;
      /**
       * <code>UNSUBSCRIBE = 3;</code>
       */
      public static final int UNSUBSCRIBE_VALUE = 3;
      /**
       * <code>MESSAGE = 4;</code>
       */
      public static final int MESSAGE_VALUE = 4;
      /**
       * <code>SUBSCRIBE = 5;</code>
       */
      public static final int SUBSCRIBE_VALUE = 5;
      /**
       * <code>CONNECT = 6;</code>
       */
      public static final int CONNECT_VALUE = 6;
      /**
       * <code>DISCONNECT = 7;</code>
       */
      public static final int DISCONNECT_VALUE = 7;


      @java.lang.Override
      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PushType valueOf(int value) {
        return forNumber(value);
      }

      public static PushType forNumber(int value) {
        switch (value) {
          case 0: return PUBLICATION;
          case 1: return JOIN;
          case 2: return LEAVE;
          case 3: return UNSUBSCRIBE;
          case 4: return MESSAGE;
          case 5: return SUBSCRIBE;
          case 6: return CONNECT;
          case 7: return DISCONNECT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PushType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PushType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PushType>() {
              @java.lang.Override
              public PushType findValueByNumber(int number) {
                return PushType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return PushTypeVerifier.INSTANCE;
      }

      private static final class PushTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new PushTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return PushType.forNumber(number) != null;
              }
            };

      private final int value;

      private PushType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.Push.PushType)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType getType() {
      io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType result = io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType.forNumber(type_);
      return result == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType.UNRECOGNIZED : result;
    }
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.protocol.Push.PushType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int CHANNEL_FIELD_NUMBER = 2;
    private java.lang.String channel_;
    /**
     * <code>string channel = 2;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 2;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 2;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 2;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 2;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 3;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Push}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Push)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PushOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.protocol.Push.PushType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.protocol.Push.PushType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.protocol.Push.PushType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType getType() {
        return instance.getType();
      }
      /**
       * <code>.protocol.Push.PushType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.PushType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.protocol.Push.PushType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>string channel = 2;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 2;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 2;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 2;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      /**
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Push)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "channel_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Push)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push DEFAULT_INSTANCE;
    static {
      Push defaultInstance = new Push();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Push.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Push getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Push> PARSER;

    public static com.google.protobuf.Parser<Push> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ClientInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.ClientInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string user = 1;</code>
     * @return The user.
     */
    java.lang.String getUser();
    /**
     * <code>string user = 1;</code>
     * @return The bytes for user.
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <code>string client = 2;</code>
     * @return The client.
     */
    java.lang.String getClient();
    /**
     * <code>string client = 2;</code>
     * @return The bytes for client.
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>bytes conn_info = 3;</code>
     * @return The connInfo.
     */
    com.google.protobuf.ByteString getConnInfo();

    /**
     * <code>bytes chan_info = 4;</code>
     * @return The chanInfo.
     */
    com.google.protobuf.ByteString getChanInfo();
  }
  /**
   * Protobuf type {@code protocol.ClientInfo}
   */
  public  static final class ClientInfo extends
      com.google.protobuf.GeneratedMessageLite<
          ClientInfo, ClientInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.ClientInfo)
      ClientInfoOrBuilder {
    private ClientInfo() {
      user_ = "";
      client_ = "";
      connInfo_ = com.google.protobuf.ByteString.EMPTY;
      chanInfo_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int USER_FIELD_NUMBER = 1;
    private java.lang.String user_;
    /**
     * <code>string user = 1;</code>
     * @return The user.
     */
    @java.lang.Override
    public java.lang.String getUser() {
      return user_;
    }
    /**
     * <code>string user = 1;</code>
     * @return The bytes for user.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUserBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(user_);
    }
    /**
     * <code>string user = 1;</code>
     * @param value The user to set.
     */
    private void setUser(
        java.lang.String value) {
      value.getClass();
  
      user_ = value;
    }
    /**
     * <code>string user = 1;</code>
     */
    private void clearUser() {
      
      user_ = getDefaultInstance().getUser();
    }
    /**
     * <code>string user = 1;</code>
     * @param value The bytes for user to set.
     */
    private void setUserBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      user_ = value.toStringUtf8();
      
    }

    public static final int CLIENT_FIELD_NUMBER = 2;
    private java.lang.String client_;
    /**
     * <code>string client = 2;</code>
     * @return The client.
     */
    @java.lang.Override
    public java.lang.String getClient() {
      return client_;
    }
    /**
     * <code>string client = 2;</code>
     * @return The bytes for client.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(client_);
    }
    /**
     * <code>string client = 2;</code>
     * @param value The client to set.
     */
    private void setClient(
        java.lang.String value) {
      value.getClass();
  
      client_ = value;
    }
    /**
     * <code>string client = 2;</code>
     */
    private void clearClient() {
      
      client_ = getDefaultInstance().getClient();
    }
    /**
     * <code>string client = 2;</code>
     * @param value The bytes for client to set.
     */
    private void setClientBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      client_ = value.toStringUtf8();
      
    }

    public static final int CONN_INFO_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString connInfo_;
    /**
     * <code>bytes conn_info = 3;</code>
     * @return The connInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getConnInfo() {
      return connInfo_;
    }
    /**
     * <code>bytes conn_info = 3;</code>
     * @param value The connInfo to set.
     */
    private void setConnInfo(com.google.protobuf.ByteString value) {
      value.getClass();
  
      connInfo_ = value;
    }
    /**
     * <code>bytes conn_info = 3;</code>
     */
    private void clearConnInfo() {
      
      connInfo_ = getDefaultInstance().getConnInfo();
    }

    public static final int CHAN_INFO_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString chanInfo_;
    /**
     * <code>bytes chan_info = 4;</code>
     * @return The chanInfo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getChanInfo() {
      return chanInfo_;
    }
    /**
     * <code>bytes chan_info = 4;</code>
     * @param value The chanInfo to set.
     */
    private void setChanInfo(com.google.protobuf.ByteString value) {
      value.getClass();
  
      chanInfo_ = value;
    }
    /**
     * <code>bytes chan_info = 4;</code>
     */
    private void clearChanInfo() {
      
      chanInfo_ = getDefaultInstance().getChanInfo();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.ClientInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.ClientInfo)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfoOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string user = 1;</code>
       * @return The user.
       */
      @java.lang.Override
      public java.lang.String getUser() {
        return instance.getUser();
      }
      /**
       * <code>string user = 1;</code>
       * @return The bytes for user.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUserBytes() {
        return instance.getUserBytes();
      }
      /**
       * <code>string user = 1;</code>
       * @param value The user to set.
       * @return This builder for chaining.
       */
      public Builder setUser(
          java.lang.String value) {
        copyOnWrite();
        instance.setUser(value);
        return this;
      }
      /**
       * <code>string user = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUser() {
        copyOnWrite();
        instance.clearUser();
        return this;
      }
      /**
       * <code>string user = 1;</code>
       * @param value The bytes for user to set.
       * @return This builder for chaining.
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUserBytes(value);
        return this;
      }

      /**
       * <code>string client = 2;</code>
       * @return The client.
       */
      @java.lang.Override
      public java.lang.String getClient() {
        return instance.getClient();
      }
      /**
       * <code>string client = 2;</code>
       * @return The bytes for client.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getClientBytes() {
        return instance.getClientBytes();
      }
      /**
       * <code>string client = 2;</code>
       * @param value The client to set.
       * @return This builder for chaining.
       */
      public Builder setClient(
          java.lang.String value) {
        copyOnWrite();
        instance.setClient(value);
        return this;
      }
      /**
       * <code>string client = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearClient() {
        copyOnWrite();
        instance.clearClient();
        return this;
      }
      /**
       * <code>string client = 2;</code>
       * @param value The bytes for client to set.
       * @return This builder for chaining.
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientBytes(value);
        return this;
      }

      /**
       * <code>bytes conn_info = 3;</code>
       * @return The connInfo.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getConnInfo() {
        return instance.getConnInfo();
      }
      /**
       * <code>bytes conn_info = 3;</code>
       * @param value The connInfo to set.
       * @return This builder for chaining.
       */
      public Builder setConnInfo(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setConnInfo(value);
        return this;
      }
      /**
       * <code>bytes conn_info = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnInfo() {
        copyOnWrite();
        instance.clearConnInfo();
        return this;
      }

      /**
       * <code>bytes chan_info = 4;</code>
       * @return The chanInfo.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getChanInfo() {
        return instance.getChanInfo();
      }
      /**
       * <code>bytes chan_info = 4;</code>
       * @param value The chanInfo to set.
       * @return This builder for chaining.
       */
      public Builder setChanInfo(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChanInfo(value);
        return this;
      }
      /**
       * <code>bytes chan_info = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChanInfo() {
        copyOnWrite();
        instance.clearChanInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.ClientInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "user_",
              "client_",
              "connInfo_",
              "chanInfo_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\n\u0004\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.ClientInfo)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo DEFAULT_INSTANCE;
    static {
      ClientInfo defaultInstance = new ClientInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ClientInfo.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ClientInfo> PARSER;

    public static com.google.protobuf.Parser<ClientInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PublicationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Publication)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 seq = 1;</code>
     * @return The seq.
     */
    int getSeq();

    /**
     * <code>uint32 gen = 2;</code>
     * @return The gen.
     */
    int getGen();

    /**
     * <code>string uid = 3;</code>
     * @return The uid.
     */
    java.lang.String getUid();
    /**
     * <code>string uid = 3;</code>
     * @return The bytes for uid.
     */
    com.google.protobuf.ByteString
        getUidBytes();

    /**
     * <code>bytes data = 4;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     * @return The info.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo();

    /**
     * <code>uint64 offset = 6;</code>
     * @return The offset.
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code protocol.Publication}
   */
  public  static final class Publication extends
      com.google.protobuf.GeneratedMessageLite<
          Publication, Publication.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Publication)
      PublicationOrBuilder {
    private Publication() {
      uid_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int SEQ_FIELD_NUMBER = 1;
    private int seq_;
    /**
     * <code>uint32 seq = 1;</code>
     * @return The seq.
     */
    @java.lang.Override
    public int getSeq() {
      return seq_;
    }
    /**
     * <code>uint32 seq = 1;</code>
     * @param value The seq to set.
     */
    private void setSeq(int value) {
      
      seq_ = value;
    }
    /**
     * <code>uint32 seq = 1;</code>
     */
    private void clearSeq() {
      
      seq_ = 0;
    }

    public static final int GEN_FIELD_NUMBER = 2;
    private int gen_;
    /**
     * <code>uint32 gen = 2;</code>
     * @return The gen.
     */
    @java.lang.Override
    public int getGen() {
      return gen_;
    }
    /**
     * <code>uint32 gen = 2;</code>
     * @param value The gen to set.
     */
    private void setGen(int value) {
      
      gen_ = value;
    }
    /**
     * <code>uint32 gen = 2;</code>
     */
    private void clearGen() {
      
      gen_ = 0;
    }

    public static final int UID_FIELD_NUMBER = 3;
    private java.lang.String uid_;
    /**
     * <code>string uid = 3;</code>
     * @return The uid.
     */
    @java.lang.Override
    public java.lang.String getUid() {
      return uid_;
    }
    /**
     * <code>string uid = 3;</code>
     * @return The bytes for uid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUidBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(uid_);
    }
    /**
     * <code>string uid = 3;</code>
     * @param value The uid to set.
     */
    private void setUid(
        java.lang.String value) {
      value.getClass();
  
      uid_ = value;
    }
    /**
     * <code>string uid = 3;</code>
     */
    private void clearUid() {
      
      uid_ = getDefaultInstance().getUid();
    }
    /**
     * <code>string uid = 3;</code>
     * @param value The bytes for uid to set.
     */
    private void setUidBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      uid_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 4;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 4;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 4;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int INFO_FIELD_NUMBER = 5;
    private io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo info_;
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return info_ != null;
    }
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
      return info_ == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance() : info_;
    }
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     */
    private void setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  info_ = value;
      
      }
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  if (info_ != null &&
          info_ != io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance()) {
        info_ =
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      
    }
    /**
     * <code>.protocol.ClientInfo info = 5;</code>
     */
    private void clearInfo() {  info_ = null;
      
    }

    public static final int OFFSET_FIELD_NUMBER = 6;
    private long offset_;
    /**
     * <code>uint64 offset = 6;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 6;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 6;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Publication}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Publication)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublicationOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 seq = 1;</code>
       * @return The seq.
       */
      @java.lang.Override
      public int getSeq() {
        return instance.getSeq();
      }
      /**
       * <code>uint32 seq = 1;</code>
       * @param value The seq to set.
       * @return This builder for chaining.
       */
      public Builder setSeq(int value) {
        copyOnWrite();
        instance.setSeq(value);
        return this;
      }
      /**
       * <code>uint32 seq = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeq() {
        copyOnWrite();
        instance.clearSeq();
        return this;
      }

      /**
       * <code>uint32 gen = 2;</code>
       * @return The gen.
       */
      @java.lang.Override
      public int getGen() {
        return instance.getGen();
      }
      /**
       * <code>uint32 gen = 2;</code>
       * @param value The gen to set.
       * @return This builder for chaining.
       */
      public Builder setGen(int value) {
        copyOnWrite();
        instance.setGen(value);
        return this;
      }
      /**
       * <code>uint32 gen = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGen() {
        copyOnWrite();
        instance.clearGen();
        return this;
      }

      /**
       * <code>string uid = 3;</code>
       * @return The uid.
       */
      @java.lang.Override
      public java.lang.String getUid() {
        return instance.getUid();
      }
      /**
       * <code>string uid = 3;</code>
       * @return The bytes for uid.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUidBytes() {
        return instance.getUidBytes();
      }
      /**
       * <code>string uid = 3;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(
          java.lang.String value) {
        copyOnWrite();
        instance.setUid(value);
        return this;
      }
      /**
       * <code>string uid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        copyOnWrite();
        instance.clearUid();
        return this;
      }
      /**
       * <code>string uid = 3;</code>
       * @param value The bytes for uid to set.
       * @return This builder for chaining.
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setUidBytes(value);
        return this;
      }

      /**
       * <code>bytes data = 4;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 4;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
        return instance.getInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      public Builder setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      public Builder setInfo(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      public Builder mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 5;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      /**
       * <code>uint64 offset = 6;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 6;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Publication)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "seq_",
              "gen_",
              "uid_",
              "data_",
              "info_",
              "offset_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u000b\u0002\u000b" +
                "\u0003\u0208\u0004\n\u0005\t\u0006\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Publication)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication DEFAULT_INSTANCE;
    static {
      Publication defaultInstance = new Publication();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Publication.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Publication> PARSER;

    public static com.google.protobuf.Parser<Publication> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface JoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Join)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     * @return The info.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo();
  }
  /**
   * Protobuf type {@code protocol.Join}
   */
  public  static final class Join extends
      com.google.protobuf.GeneratedMessageLite<
          Join, Join.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Join)
      JoinOrBuilder {
    private Join() {
    }
    public static final int INFO_FIELD_NUMBER = 1;
    private io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo info_;
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return info_ != null;
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
      return info_ == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance() : info_;
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    private void setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  info_ = value;
      
      }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  if (info_ != null &&
          info_ != io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance()) {
        info_ =
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    private void clearInfo() {  info_ = null;
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Join}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Join)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.JoinOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
        return instance.getInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder setInfo(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Join)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "info_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Join)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join DEFAULT_INSTANCE;
    static {
      Join defaultInstance = new Join();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Join.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Join getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Join> PARSER;

    public static com.google.protobuf.Parser<Join> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface LeaveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Leave)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     * @return The info.
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo();
  }
  /**
   * Protobuf type {@code protocol.Leave}
   */
  public  static final class Leave extends
      com.google.protobuf.GeneratedMessageLite<
          Leave, Leave.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Leave)
      LeaveOrBuilder {
    private Leave() {
    }
    public static final int INFO_FIELD_NUMBER = 1;
    private io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo info_;
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return info_ != null;
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
      return info_ == null ? io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance() : info_;
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    private void setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  info_ = value;
      
      }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
      value.getClass();
  if (info_ != null &&
          info_ != io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance()) {
        info_ =
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      
    }
    /**
     * <code>.protocol.ClientInfo info = 1;</code>
     */
    private void clearInfo() {  info_ = null;
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Leave}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Leave)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.LeaveOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getInfo() {
        return instance.getInfo();
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder setInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder setInfo(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder mergeInfo(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <code>.protocol.ClientInfo info = 1;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Leave)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "info_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Leave)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave DEFAULT_INSTANCE;
    static {
      Leave defaultInstance = new Leave();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Leave.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Leave getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Leave> PARSER;

    public static com.google.protobuf.Parser<Leave> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnsubscribeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Unsubscribe)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bool resubscribe = 1;</code>
     * @return The resubscribe.
     */
    boolean getResubscribe();
  }
  /**
   * Protobuf type {@code protocol.Unsubscribe}
   */
  public  static final class Unsubscribe extends
      com.google.protobuf.GeneratedMessageLite<
          Unsubscribe, Unsubscribe.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Unsubscribe)
      UnsubscribeOrBuilder {
    private Unsubscribe() {
    }
    public static final int RESUBSCRIBE_FIELD_NUMBER = 1;
    private boolean resubscribe_;
    /**
     * <code>bool resubscribe = 1;</code>
     * @return The resubscribe.
     */
    @java.lang.Override
    public boolean getResubscribe() {
      return resubscribe_;
    }
    /**
     * <code>bool resubscribe = 1;</code>
     * @param value The resubscribe to set.
     */
    private void setResubscribe(boolean value) {
      
      resubscribe_ = value;
    }
    /**
     * <code>bool resubscribe = 1;</code>
     */
    private void clearResubscribe() {
      
      resubscribe_ = false;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Unsubscribe}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Unsubscribe)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bool resubscribe = 1;</code>
       * @return The resubscribe.
       */
      @java.lang.Override
      public boolean getResubscribe() {
        return instance.getResubscribe();
      }
      /**
       * <code>bool resubscribe = 1;</code>
       * @param value The resubscribe to set.
       * @return This builder for chaining.
       */
      public Builder setResubscribe(boolean value) {
        copyOnWrite();
        instance.setResubscribe(value);
        return this;
      }
      /**
       * <code>bool resubscribe = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResubscribe() {
        copyOnWrite();
        instance.clearResubscribe();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Unsubscribe)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "resubscribe_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Unsubscribe)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe DEFAULT_INSTANCE;
    static {
      Unsubscribe defaultInstance = new Unsubscribe();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Unsubscribe.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Unsubscribe getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Unsubscribe> PARSER;

    public static com.google.protobuf.Parser<Unsubscribe> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Subscribe)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bool recoverable = 1;</code>
     * @return The recoverable.
     */
    boolean getRecoverable();

    /**
     * <code>uint32 seq = 2;</code>
     * @return The seq.
     */
    int getSeq();

    /**
     * <code>uint32 gen = 3;</code>
     * @return The gen.
     */
    int getGen();

    /**
     * <code>string epoch = 4;</code>
     * @return The epoch.
     */
    java.lang.String getEpoch();
    /**
     * <code>string epoch = 4;</code>
     * @return The bytes for epoch.
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>uint64 offset = 5;</code>
     * @return The offset.
     */
    long getOffset();

    /**
     * <code>bool positioned = 6;</code>
     * @return The positioned.
     */
    boolean getPositioned();

    /**
     * <code>bytes data = 7;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.Subscribe}
   */
  public  static final class Subscribe extends
      com.google.protobuf.GeneratedMessageLite<
          Subscribe, Subscribe.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Subscribe)
      SubscribeOrBuilder {
    private Subscribe() {
      epoch_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int RECOVERABLE_FIELD_NUMBER = 1;
    private boolean recoverable_;
    /**
     * <code>bool recoverable = 1;</code>
     * @return The recoverable.
     */
    @java.lang.Override
    public boolean getRecoverable() {
      return recoverable_;
    }
    /**
     * <code>bool recoverable = 1;</code>
     * @param value The recoverable to set.
     */
    private void setRecoverable(boolean value) {
      
      recoverable_ = value;
    }
    /**
     * <code>bool recoverable = 1;</code>
     */
    private void clearRecoverable() {
      
      recoverable_ = false;
    }

    public static final int SEQ_FIELD_NUMBER = 2;
    private int seq_;
    /**
     * <code>uint32 seq = 2;</code>
     * @return The seq.
     */
    @java.lang.Override
    public int getSeq() {
      return seq_;
    }
    /**
     * <code>uint32 seq = 2;</code>
     * @param value The seq to set.
     */
    private void setSeq(int value) {
      
      seq_ = value;
    }
    /**
     * <code>uint32 seq = 2;</code>
     */
    private void clearSeq() {
      
      seq_ = 0;
    }

    public static final int GEN_FIELD_NUMBER = 3;
    private int gen_;
    /**
     * <code>uint32 gen = 3;</code>
     * @return The gen.
     */
    @java.lang.Override
    public int getGen() {
      return gen_;
    }
    /**
     * <code>uint32 gen = 3;</code>
     * @param value The gen to set.
     */
    private void setGen(int value) {
      
      gen_ = value;
    }
    /**
     * <code>uint32 gen = 3;</code>
     */
    private void clearGen() {
      
      gen_ = 0;
    }

    public static final int EPOCH_FIELD_NUMBER = 4;
    private java.lang.String epoch_;
    /**
     * <code>string epoch = 4;</code>
     * @return The epoch.
     */
    @java.lang.Override
    public java.lang.String getEpoch() {
      return epoch_;
    }
    /**
     * <code>string epoch = 4;</code>
     * @return The bytes for epoch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(epoch_);
    }
    /**
     * <code>string epoch = 4;</code>
     * @param value The epoch to set.
     */
    private void setEpoch(
        java.lang.String value) {
      value.getClass();
  
      epoch_ = value;
    }
    /**
     * <code>string epoch = 4;</code>
     */
    private void clearEpoch() {
      
      epoch_ = getDefaultInstance().getEpoch();
    }
    /**
     * <code>string epoch = 4;</code>
     * @param value The bytes for epoch to set.
     */
    private void setEpochBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      epoch_ = value.toStringUtf8();
      
    }

    public static final int OFFSET_FIELD_NUMBER = 5;
    private long offset_;
    /**
     * <code>uint64 offset = 5;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 5;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 5;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static final int POSITIONED_FIELD_NUMBER = 6;
    private boolean positioned_;
    /**
     * <code>bool positioned = 6;</code>
     * @return The positioned.
     */
    @java.lang.Override
    public boolean getPositioned() {
      return positioned_;
    }
    /**
     * <code>bool positioned = 6;</code>
     * @param value The positioned to set.
     */
    private void setPositioned(boolean value) {
      
      positioned_ = value;
    }
    /**
     * <code>bool positioned = 6;</code>
     */
    private void clearPositioned() {
      
      positioned_ = false;
    }

    public static final int DATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 7;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 7;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 7;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Subscribe}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Subscribe)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bool recoverable = 1;</code>
       * @return The recoverable.
       */
      @java.lang.Override
      public boolean getRecoverable() {
        return instance.getRecoverable();
      }
      /**
       * <code>bool recoverable = 1;</code>
       * @param value The recoverable to set.
       * @return This builder for chaining.
       */
      public Builder setRecoverable(boolean value) {
        copyOnWrite();
        instance.setRecoverable(value);
        return this;
      }
      /**
       * <code>bool recoverable = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecoverable() {
        copyOnWrite();
        instance.clearRecoverable();
        return this;
      }

      /**
       * <code>uint32 seq = 2;</code>
       * @return The seq.
       */
      @java.lang.Override
      public int getSeq() {
        return instance.getSeq();
      }
      /**
       * <code>uint32 seq = 2;</code>
       * @param value The seq to set.
       * @return This builder for chaining.
       */
      public Builder setSeq(int value) {
        copyOnWrite();
        instance.setSeq(value);
        return this;
      }
      /**
       * <code>uint32 seq = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeq() {
        copyOnWrite();
        instance.clearSeq();
        return this;
      }

      /**
       * <code>uint32 gen = 3;</code>
       * @return The gen.
       */
      @java.lang.Override
      public int getGen() {
        return instance.getGen();
      }
      /**
       * <code>uint32 gen = 3;</code>
       * @param value The gen to set.
       * @return This builder for chaining.
       */
      public Builder setGen(int value) {
        copyOnWrite();
        instance.setGen(value);
        return this;
      }
      /**
       * <code>uint32 gen = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGen() {
        copyOnWrite();
        instance.clearGen();
        return this;
      }

      /**
       * <code>string epoch = 4;</code>
       * @return The epoch.
       */
      @java.lang.Override
      public java.lang.String getEpoch() {
        return instance.getEpoch();
      }
      /**
       * <code>string epoch = 4;</code>
       * @return The bytes for epoch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEpochBytes() {
        return instance.getEpochBytes();
      }
      /**
       * <code>string epoch = 4;</code>
       * @param value The epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpoch(
          java.lang.String value) {
        copyOnWrite();
        instance.setEpoch(value);
        return this;
      }
      /**
       * <code>string epoch = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpoch() {
        copyOnWrite();
        instance.clearEpoch();
        return this;
      }
      /**
       * <code>string epoch = 4;</code>
       * @param value The bytes for epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEpochBytes(value);
        return this;
      }

      /**
       * <code>uint64 offset = 5;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 5;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      /**
       * <code>bool positioned = 6;</code>
       * @return The positioned.
       */
      @java.lang.Override
      public boolean getPositioned() {
        return instance.getPositioned();
      }
      /**
       * <code>bool positioned = 6;</code>
       * @param value The positioned to set.
       * @return This builder for chaining.
       */
      public Builder setPositioned(boolean value) {
        copyOnWrite();
        instance.setPositioned(value);
        return this;
      }
      /**
       * <code>bool positioned = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPositioned() {
        copyOnWrite();
        instance.clearPositioned();
        return this;
      }

      /**
       * <code>bytes data = 7;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 7;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Subscribe)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "recoverable_",
              "seq_",
              "gen_",
              "epoch_",
              "offset_",
              "positioned_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0007\u0002\u000b" +
                "\u0003\u000b\u0004\u0208\u0005\u0003\u0006\u0007\u0007\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Subscribe)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe DEFAULT_INSTANCE;
    static {
      Subscribe defaultInstance = new Subscribe();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Subscribe.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Subscribe getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Subscribe> PARSER;

    public static com.google.protobuf.Parser<Subscribe> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Message)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.Message}
   */
  public  static final class Message extends
      com.google.protobuf.GeneratedMessageLite<
          Message, Message.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Message)
      MessageOrBuilder {
    private Message() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Message)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.MessageOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Message)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "data_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Message)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message DEFAULT_INSTANCE;
    static {
      Message defaultInstance = new Message();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Message.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Message> PARSER;

    public static com.google.protobuf.Parser<Message> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConnectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Connect)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    java.lang.String getClient();
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    int getSubsCount();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    boolean containsSubs(
        java.lang.String key);
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getSubs();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getSubsMap();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue);
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code protocol.Connect}
   */
  public  static final class Connect extends
      com.google.protobuf.GeneratedMessageLite<
          Connect, Connect.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Connect)
      ConnectOrBuilder {
    private Connect() {
      client_ = "";
      version_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int CLIENT_FIELD_NUMBER = 1;
    private java.lang.String client_;
    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    @java.lang.Override
    public java.lang.String getClient() {
      return client_;
    }
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(client_);
    }
    /**
     * <code>string client = 1;</code>
     * @param value The client to set.
     */
    private void setClient(
        java.lang.String value) {
      value.getClass();
  
      client_ = value;
    }
    /**
     * <code>string client = 1;</code>
     */
    private void clearClient() {
      
      client_ = getDefaultInstance().getClient();
    }
    /**
     * <code>string client = 1;</code>
     * @param value The bytes for client to set.
     */
    private void setClientBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      client_ = value.toStringUtf8();
      
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.String version_;
    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      return version_;
    }
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(version_);
    }
    /**
     * <code>string version = 2;</code>
     * @param value The version to set.
     */
    private void setVersion(
        java.lang.String value) {
      value.getClass();
  
      version_ = value;
    }
    /**
     * <code>string version = 2;</code>
     */
    private void clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
    }
    /**
     * <code>string version = 2;</code>
     * @param value The bytes for version to set.
     */
    private void setVersionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      version_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 3;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int SUBS_FIELD_NUMBER = 4;
    private static final class SubsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> subs_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    internalGetSubs() {
      return subs_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    internalGetMutableSubs() {
      if (!subs_.isMutable()) {
        subs_ = subs_.mutableCopy();
      }
      return subs_;
    }
    @java.lang.Override

    public int getSubsCount() {
      return internalGetSubs().size();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    @java.lang.Override

    public boolean containsSubs(
        java.lang.String key) {
      key.getClass();
      return internalGetSubs().containsKey(key);
    }
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubs() {
      return getSubsMap();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetSubs());
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
          internalGetSubs();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
          internalGetSubs();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
     */
    private java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getMutableSubsMap() {
      return internalGetMutableSubs();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Connect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Connect)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string client = 1;</code>
       * @return The client.
       */
      @java.lang.Override
      public java.lang.String getClient() {
        return instance.getClient();
      }
      /**
       * <code>string client = 1;</code>
       * @return The bytes for client.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getClientBytes() {
        return instance.getClientBytes();
      }
      /**
       * <code>string client = 1;</code>
       * @param value The client to set.
       * @return This builder for chaining.
       */
      public Builder setClient(
          java.lang.String value) {
        copyOnWrite();
        instance.setClient(value);
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClient() {
        copyOnWrite();
        instance.clearClient();
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @param value The bytes for client to set.
       * @return This builder for chaining.
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientBytes(value);
        return this;
      }

      /**
       * <code>string version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        return instance.getVersionBytes();
      }
      /**
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVersionBytes(value);
        return this;
      }

      /**
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      @java.lang.Override

      public int getSubsCount() {
        return instance.getSubsMap().size();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      @java.lang.Override

      public boolean containsSubs(
          java.lang.String key) {
        key.getClass();
        return instance.getSubsMap().containsKey(key);
      }

      public Builder clearSubs() {
        copyOnWrite();
        instance.getMutableSubsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */

      public Builder removeSubs(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getSubsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubs() {
        return getSubsMap();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getSubsMap());
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
            instance.getSubsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
            instance.getSubsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      public Builder putSubs(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 4;</code>
       */
      public Builder putAllSubs(
          java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> values) {
        copyOnWrite();
        instance.getMutableSubsMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Connect)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "client_",
              "version_",
              "data_",
              "subs_",
              SubsDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0001\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\n\u00042";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Connect)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect DEFAULT_INSTANCE;
    static {
      Connect defaultInstance = new Connect();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Connect.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Connect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Connect> PARSER;

    public static com.google.protobuf.Parser<Connect> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DisconnectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.Disconnect)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 code = 1;</code>
     * @return The code.
     */
    int getCode();

    /**
     * <code>string reason = 2;</code>
     * @return The reason.
     */
    java.lang.String getReason();
    /**
     * <code>string reason = 2;</code>
     * @return The bytes for reason.
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    /**
     * <code>bool reconnect = 3;</code>
     * @return The reconnect.
     */
    boolean getReconnect();
  }
  /**
   * Protobuf type {@code protocol.Disconnect}
   */
  public  static final class Disconnect extends
      com.google.protobuf.GeneratedMessageLite<
          Disconnect, Disconnect.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.Disconnect)
      DisconnectOrBuilder {
    private Disconnect() {
      reason_ = "";
    }
    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>uint32 code = 1;</code>
     * @return The code.
     */
    @java.lang.Override
    public int getCode() {
      return code_;
    }
    /**
     * <code>uint32 code = 1;</code>
     * @param value The code to set.
     */
    private void setCode(int value) {
      
      code_ = value;
    }
    /**
     * <code>uint32 code = 1;</code>
     */
    private void clearCode() {
      
      code_ = 0;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private java.lang.String reason_;
    /**
     * <code>string reason = 2;</code>
     * @return The reason.
     */
    @java.lang.Override
    public java.lang.String getReason() {
      return reason_;
    }
    /**
     * <code>string reason = 2;</code>
     * @return The bytes for reason.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(reason_);
    }
    /**
     * <code>string reason = 2;</code>
     * @param value The reason to set.
     */
    private void setReason(
        java.lang.String value) {
      value.getClass();
  
      reason_ = value;
    }
    /**
     * <code>string reason = 2;</code>
     */
    private void clearReason() {
      
      reason_ = getDefaultInstance().getReason();
    }
    /**
     * <code>string reason = 2;</code>
     * @param value The bytes for reason to set.
     */
    private void setReasonBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      reason_ = value.toStringUtf8();
      
    }

    public static final int RECONNECT_FIELD_NUMBER = 3;
    private boolean reconnect_;
    /**
     * <code>bool reconnect = 3;</code>
     * @return The reconnect.
     */
    @java.lang.Override
    public boolean getReconnect() {
      return reconnect_;
    }
    /**
     * <code>bool reconnect = 3;</code>
     * @param value The reconnect to set.
     */
    private void setReconnect(boolean value) {
      
      reconnect_ = value;
    }
    /**
     * <code>bool reconnect = 3;</code>
     */
    private void clearReconnect() {
      
      reconnect_ = false;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.Disconnect}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.Disconnect)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.DisconnectOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public int getCode() {
        return instance.getCode();
      }
      /**
       * <code>uint32 code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(int value) {
        copyOnWrite();
        instance.setCode(value);
        return this;
      }
      /**
       * <code>uint32 code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        copyOnWrite();
        instance.clearCode();
        return this;
      }

      /**
       * <code>string reason = 2;</code>
       * @return The reason.
       */
      @java.lang.Override
      public java.lang.String getReason() {
        return instance.getReason();
      }
      /**
       * <code>string reason = 2;</code>
       * @return The bytes for reason.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getReasonBytes() {
        return instance.getReasonBytes();
      }
      /**
       * <code>string reason = 2;</code>
       * @param value The reason to set.
       * @return This builder for chaining.
       */
      public Builder setReason(
          java.lang.String value) {
        copyOnWrite();
        instance.setReason(value);
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReason() {
        copyOnWrite();
        instance.clearReason();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       * @param value The bytes for reason to set.
       * @return This builder for chaining.
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setReasonBytes(value);
        return this;
      }

      /**
       * <code>bool reconnect = 3;</code>
       * @return The reconnect.
       */
      @java.lang.Override
      public boolean getReconnect() {
        return instance.getReconnect();
      }
      /**
       * <code>bool reconnect = 3;</code>
       * @param value The reconnect to set.
       * @return This builder for chaining.
       */
      public Builder setReconnect(boolean value) {
        copyOnWrite();
        instance.setReconnect(value);
        return this;
      }
      /**
       * <code>bool reconnect = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearReconnect() {
        copyOnWrite();
        instance.clearReconnect();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Disconnect)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "code_",
              "reason_",
              "reconnect_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0002\u0208" +
                "\u0003\u0007";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.Disconnect)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect DEFAULT_INSTANCE;
    static {
      Disconnect defaultInstance = new Disconnect();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Disconnect.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.Disconnect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Disconnect> PARSER;

    public static com.google.protobuf.Parser<Disconnect> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConnectRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.ConnectRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string token = 1;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <code>string token = 1;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    int getSubsCount();
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    boolean containsSubs(
        java.lang.String key);
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>
    getSubs();
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>
    getSubsMap();
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest defaultValue);
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrThrow(
        java.lang.String key);

    /**
     * <code>string name = 4;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 4;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string version = 5;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code protocol.ConnectRequest}
   */
  public  static final class ConnectRequest extends
      com.google.protobuf.GeneratedMessageLite<
          ConnectRequest, ConnectRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.ConnectRequest)
      ConnectRequestOrBuilder {
    private ConnectRequest() {
      token_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
      name_ = "";
      version_ = "";
    }
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.String token_;
    /**
     * <code>string token = 1;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      return token_;
    }
    /**
     * <code>string token = 1;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(token_);
    }
    /**
     * <code>string token = 1;</code>
     * @param value The token to set.
     */
    private void setToken(
        java.lang.String value) {
      value.getClass();
  
      token_ = value;
    }
    /**
     * <code>string token = 1;</code>
     */
    private void clearToken() {
      
      token_ = getDefaultInstance().getToken();
    }
    /**
     * <code>string token = 1;</code>
     * @param value The bytes for token to set.
     */
    private void setTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      token_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 2;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 2;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int SUBS_FIELD_NUMBER = 3;
    private static final class SubsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> subs_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>
    internalGetSubs() {
      return subs_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>
    internalGetMutableSubs() {
      if (!subs_.isMutable()) {
        subs_ = subs_.mutableCopy();
      }
      return subs_;
    }
    @java.lang.Override

    public int getSubsCount() {
      return internalGetSubs().size();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    @java.lang.Override

    public boolean containsSubs(
        java.lang.String key) {
      key.getClass();
      return internalGetSubs().containsKey(key);
    }
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> getSubs() {
      return getSubsMap();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> getSubsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetSubs());
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> map =
          internalGetSubs();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> map =
          internalGetSubs();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
     */
    private java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>
    getMutableSubsMap() {
      return internalGetMutableSubs();
    }

    public static final int NAME_FIELD_NUMBER = 4;
    private java.lang.String name_;
    /**
     * <code>string name = 4;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>string name = 4;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>string name = 4;</code>
     * @param value The name to set.
     */
    private void setName(
        java.lang.String value) {
      value.getClass();
  
      name_ = value;
    }
    /**
     * <code>string name = 4;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>string name = 4;</code>
     * @param value The bytes for name to set.
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      name_ = value.toStringUtf8();
      
    }

    public static final int VERSION_FIELD_NUMBER = 5;
    private java.lang.String version_;
    /**
     * <code>string version = 5;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      return version_;
    }
    /**
     * <code>string version = 5;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(version_);
    }
    /**
     * <code>string version = 5;</code>
     * @param value The version to set.
     */
    private void setVersion(
        java.lang.String value) {
      value.getClass();
  
      version_ = value;
    }
    /**
     * <code>string version = 5;</code>
     */
    private void clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
    }
    /**
     * <code>string version = 5;</code>
     * @param value The bytes for version to set.
     */
    private void setVersionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      version_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.ConnectRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.ConnectRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string token = 1;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        return instance.getToken();
      }
      /**
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return instance.getTokenBytes();
      }
      /**
       * <code>string token = 1;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setToken(value);
        return this;
      }
      /**
       * <code>string token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenBytes(value);
        return this;
      }

      /**
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      @java.lang.Override

      public int getSubsCount() {
        return instance.getSubsMap().size();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      @java.lang.Override

      public boolean containsSubs(
          java.lang.String key) {
        key.getClass();
        return instance.getSubsMap().containsKey(key);
      }

      public Builder clearSubs() {
        copyOnWrite();
        instance.getMutableSubsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */

      public Builder removeSubs(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getSubsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> getSubs() {
        return getSubsMap();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> getSubsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getSubsMap());
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrDefault(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> map =
            instance.getSubsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getSubsOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> map =
            instance.getSubsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      public Builder putSubs(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeRequest&gt; subs = 3;</code>
       */
      public Builder putAllSubs(
          java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> values) {
        copyOnWrite();
        instance.getMutableSubsMap().putAll(values);
        return this;
      }

      /**
       * <code>string name = 4;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>string name = 4;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>string name = 4;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>string name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>string name = 4;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>string version = 5;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>string version = 5;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        return instance.getVersionBytes();
      }
      /**
       * <code>string version = 5;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>string version = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }
      /**
       * <code>string version = 5;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVersionBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.ConnectRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "token_",
              "data_",
              "subs_",
              SubsDefaultEntryHolder.defaultEntry,
              "name_",
              "version_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0001\u0000\u0000\u0001\u0208\u0002\n" +
                "\u00032\u0004\u0208\u0005\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.ConnectRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest DEFAULT_INSTANCE;
    static {
      ConnectRequest defaultInstance = new ConnectRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ConnectRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ConnectRequest> PARSER;

    public static com.google.protobuf.Parser<ConnectRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ConnectResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.ConnectResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    java.lang.String getClient();
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>bool expires = 3;</code>
     * @return The expires.
     */
    boolean getExpires();

    /**
     * <code>uint32 ttl = 4;</code>
     * @return The ttl.
     */
    int getTtl();

    /**
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    int getSubsCount();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    boolean containsSubs(
        java.lang.String key);
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getSubs();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getSubsMap();
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue);
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code protocol.ConnectResult}
   */
  public  static final class ConnectResult extends
      com.google.protobuf.GeneratedMessageLite<
          ConnectResult, ConnectResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.ConnectResult)
      ConnectResultOrBuilder {
    private ConnectResult() {
      client_ = "";
      version_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int CLIENT_FIELD_NUMBER = 1;
    private java.lang.String client_;
    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    @java.lang.Override
    public java.lang.String getClient() {
      return client_;
    }
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(client_);
    }
    /**
     * <code>string client = 1;</code>
     * @param value The client to set.
     */
    private void setClient(
        java.lang.String value) {
      value.getClass();
  
      client_ = value;
    }
    /**
     * <code>string client = 1;</code>
     */
    private void clearClient() {
      
      client_ = getDefaultInstance().getClient();
    }
    /**
     * <code>string client = 1;</code>
     * @param value The bytes for client to set.
     */
    private void setClientBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      client_ = value.toStringUtf8();
      
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.String version_;
    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      return version_;
    }
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(version_);
    }
    /**
     * <code>string version = 2;</code>
     * @param value The version to set.
     */
    private void setVersion(
        java.lang.String value) {
      value.getClass();
  
      version_ = value;
    }
    /**
     * <code>string version = 2;</code>
     */
    private void clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
    }
    /**
     * <code>string version = 2;</code>
     * @param value The bytes for version to set.
     */
    private void setVersionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      version_ = value.toStringUtf8();
      
    }

    public static final int EXPIRES_FIELD_NUMBER = 3;
    private boolean expires_;
    /**
     * <code>bool expires = 3;</code>
     * @return The expires.
     */
    @java.lang.Override
    public boolean getExpires() {
      return expires_;
    }
    /**
     * <code>bool expires = 3;</code>
     * @param value The expires to set.
     */
    private void setExpires(boolean value) {
      
      expires_ = value;
    }
    /**
     * <code>bool expires = 3;</code>
     */
    private void clearExpires() {
      
      expires_ = false;
    }

    public static final int TTL_FIELD_NUMBER = 4;
    private int ttl_;
    /**
     * <code>uint32 ttl = 4;</code>
     * @return The ttl.
     */
    @java.lang.Override
    public int getTtl() {
      return ttl_;
    }
    /**
     * <code>uint32 ttl = 4;</code>
     * @param value The ttl to set.
     */
    private void setTtl(int value) {
      
      ttl_ = value;
    }
    /**
     * <code>uint32 ttl = 4;</code>
     */
    private void clearTtl() {
      
      ttl_ = 0;
    }

    public static final int DATA_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 5;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 5;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 5;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int SUBS_FIELD_NUMBER = 6;
    private static final class SubsDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> subs_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    internalGetSubs() {
      return subs_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    internalGetMutableSubs() {
      if (!subs_.isMutable()) {
        subs_ = subs_.mutableCopy();
      }
      return subs_;
    }
    @java.lang.Override

    public int getSubsCount() {
      return internalGetSubs().size();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    @java.lang.Override

    public boolean containsSubs(
        java.lang.String key) {
      key.getClass();
      return internalGetSubs().containsKey(key);
    }
    /**
     * Use {@link #getSubsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubs() {
      return getSubsMap();
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubsMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetSubs());
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
          internalGetSubs();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
          internalGetSubs();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
     */
    private java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>
    getMutableSubsMap() {
      return internalGetMutableSubs();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.ConnectResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.ConnectResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string client = 1;</code>
       * @return The client.
       */
      @java.lang.Override
      public java.lang.String getClient() {
        return instance.getClient();
      }
      /**
       * <code>string client = 1;</code>
       * @return The bytes for client.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getClientBytes() {
        return instance.getClientBytes();
      }
      /**
       * <code>string client = 1;</code>
       * @param value The client to set.
       * @return This builder for chaining.
       */
      public Builder setClient(
          java.lang.String value) {
        copyOnWrite();
        instance.setClient(value);
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClient() {
        copyOnWrite();
        instance.clearClient();
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @param value The bytes for client to set.
       * @return This builder for chaining.
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientBytes(value);
        return this;
      }

      /**
       * <code>string version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        return instance.getVersionBytes();
      }
      /**
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVersionBytes(value);
        return this;
      }

      /**
       * <code>bool expires = 3;</code>
       * @return The expires.
       */
      @java.lang.Override
      public boolean getExpires() {
        return instance.getExpires();
      }
      /**
       * <code>bool expires = 3;</code>
       * @param value The expires to set.
       * @return This builder for chaining.
       */
      public Builder setExpires(boolean value) {
        copyOnWrite();
        instance.setExpires(value);
        return this;
      }
      /**
       * <code>bool expires = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpires() {
        copyOnWrite();
        instance.clearExpires();
        return this;
      }

      /**
       * <code>uint32 ttl = 4;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public int getTtl() {
        return instance.getTtl();
      }
      /**
       * <code>uint32 ttl = 4;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(int value) {
        copyOnWrite();
        instance.setTtl(value);
        return this;
      }
      /**
       * <code>uint32 ttl = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        copyOnWrite();
        instance.clearTtl();
        return this;
      }

      /**
       * <code>bytes data = 5;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 5;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      @java.lang.Override

      public int getSubsCount() {
        return instance.getSubsMap().size();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      @java.lang.Override

      public boolean containsSubs(
          java.lang.String key) {
        key.getClass();
        return instance.getSubsMap().containsKey(key);
      }

      public Builder clearSubs() {
        copyOnWrite();
        instance.getMutableSubsMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */

      public Builder removeSubs(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getSubsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubs() {
        return getSubsMap();
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> getSubsMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getSubsMap());
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrDefault(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
            instance.getSubsMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getSubsOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> map =
            instance.getSubsMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      public Builder putSubs(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutableSubsMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.SubscribeResult&gt; subs = 6;</code>
       */
      public Builder putAllSubs(
          java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> values) {
        copyOnWrite();
        instance.getMutableSubsMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.ConnectResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "client_",
              "version_",
              "expires_",
              "ttl_",
              "data_",
              "subs_",
              SubsDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0001\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u0007\u0004\u000b\u0005\n\u00062";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.ConnectResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult DEFAULT_INSTANCE;
    static {
      ConnectResult defaultInstance = new ConnectResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ConnectResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.ConnectResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ConnectResult> PARSER;

    public static com.google.protobuf.Parser<ConnectResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RefreshRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RefreshRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string token = 1;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <code>string token = 1;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();
  }
  /**
   * Protobuf type {@code protocol.RefreshRequest}
   */
  public  static final class RefreshRequest extends
      com.google.protobuf.GeneratedMessageLite<
          RefreshRequest, RefreshRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.RefreshRequest)
      RefreshRequestOrBuilder {
    private RefreshRequest() {
      token_ = "";
    }
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.lang.String token_;
    /**
     * <code>string token = 1;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      return token_;
    }
    /**
     * <code>string token = 1;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(token_);
    }
    /**
     * <code>string token = 1;</code>
     * @param value The token to set.
     */
    private void setToken(
        java.lang.String value) {
      value.getClass();
  
      token_ = value;
    }
    /**
     * <code>string token = 1;</code>
     */
    private void clearToken() {
      
      token_ = getDefaultInstance().getToken();
    }
    /**
     * <code>string token = 1;</code>
     * @param value The bytes for token to set.
     */
    private void setTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      token_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.RefreshRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RefreshRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string token = 1;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        return instance.getToken();
      }
      /**
       * <code>string token = 1;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return instance.getTokenBytes();
      }
      /**
       * <code>string token = 1;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setToken(value);
        return this;
      }
      /**
       * <code>string token = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>string token = 1;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.RefreshRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "token_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.RefreshRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest DEFAULT_INSTANCE;
    static {
      RefreshRequest defaultInstance = new RefreshRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RefreshRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RefreshRequest> PARSER;

    public static com.google.protobuf.Parser<RefreshRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RefreshResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RefreshResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    java.lang.String getClient();
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    com.google.protobuf.ByteString
        getClientBytes();

    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>bool expires = 3;</code>
     * @return The expires.
     */
    boolean getExpires();

    /**
     * <code>uint32 ttl = 4;</code>
     * @return The ttl.
     */
    int getTtl();
  }
  /**
   * Protobuf type {@code protocol.RefreshResult}
   */
  public  static final class RefreshResult extends
      com.google.protobuf.GeneratedMessageLite<
          RefreshResult, RefreshResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.RefreshResult)
      RefreshResultOrBuilder {
    private RefreshResult() {
      client_ = "";
      version_ = "";
    }
    public static final int CLIENT_FIELD_NUMBER = 1;
    private java.lang.String client_;
    /**
     * <code>string client = 1;</code>
     * @return The client.
     */
    @java.lang.Override
    public java.lang.String getClient() {
      return client_;
    }
    /**
     * <code>string client = 1;</code>
     * @return The bytes for client.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClientBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(client_);
    }
    /**
     * <code>string client = 1;</code>
     * @param value The client to set.
     */
    private void setClient(
        java.lang.String value) {
      value.getClass();
  
      client_ = value;
    }
    /**
     * <code>string client = 1;</code>
     */
    private void clearClient() {
      
      client_ = getDefaultInstance().getClient();
    }
    /**
     * <code>string client = 1;</code>
     * @param value The bytes for client to set.
     */
    private void setClientBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      client_ = value.toStringUtf8();
      
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.String version_;
    /**
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      return version_;
    }
    /**
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(version_);
    }
    /**
     * <code>string version = 2;</code>
     * @param value The version to set.
     */
    private void setVersion(
        java.lang.String value) {
      value.getClass();
  
      version_ = value;
    }
    /**
     * <code>string version = 2;</code>
     */
    private void clearVersion() {
      
      version_ = getDefaultInstance().getVersion();
    }
    /**
     * <code>string version = 2;</code>
     * @param value The bytes for version to set.
     */
    private void setVersionBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      version_ = value.toStringUtf8();
      
    }

    public static final int EXPIRES_FIELD_NUMBER = 3;
    private boolean expires_;
    /**
     * <code>bool expires = 3;</code>
     * @return The expires.
     */
    @java.lang.Override
    public boolean getExpires() {
      return expires_;
    }
    /**
     * <code>bool expires = 3;</code>
     * @param value The expires to set.
     */
    private void setExpires(boolean value) {
      
      expires_ = value;
    }
    /**
     * <code>bool expires = 3;</code>
     */
    private void clearExpires() {
      
      expires_ = false;
    }

    public static final int TTL_FIELD_NUMBER = 4;
    private int ttl_;
    /**
     * <code>uint32 ttl = 4;</code>
     * @return The ttl.
     */
    @java.lang.Override
    public int getTtl() {
      return ttl_;
    }
    /**
     * <code>uint32 ttl = 4;</code>
     * @param value The ttl to set.
     */
    private void setTtl(int value) {
      
      ttl_ = value;
    }
    /**
     * <code>uint32 ttl = 4;</code>
     */
    private void clearTtl() {
      
      ttl_ = 0;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.RefreshResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RefreshResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string client = 1;</code>
       * @return The client.
       */
      @java.lang.Override
      public java.lang.String getClient() {
        return instance.getClient();
      }
      /**
       * <code>string client = 1;</code>
       * @return The bytes for client.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getClientBytes() {
        return instance.getClientBytes();
      }
      /**
       * <code>string client = 1;</code>
       * @param value The client to set.
       * @return This builder for chaining.
       */
      public Builder setClient(
          java.lang.String value) {
        copyOnWrite();
        instance.setClient(value);
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearClient() {
        copyOnWrite();
        instance.clearClient();
        return this;
      }
      /**
       * <code>string client = 1;</code>
       * @param value The bytes for client to set.
       * @return This builder for chaining.
       */
      public Builder setClientBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setClientBytes(value);
        return this;
      }

      /**
       * <code>string version = 2;</code>
       * @return The version.
       */
      @java.lang.Override
      public java.lang.String getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getVersionBytes() {
        return instance.getVersionBytes();
      }
      /**
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }
      /**
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setVersionBytes(value);
        return this;
      }

      /**
       * <code>bool expires = 3;</code>
       * @return The expires.
       */
      @java.lang.Override
      public boolean getExpires() {
        return instance.getExpires();
      }
      /**
       * <code>bool expires = 3;</code>
       * @param value The expires to set.
       * @return This builder for chaining.
       */
      public Builder setExpires(boolean value) {
        copyOnWrite();
        instance.setExpires(value);
        return this;
      }
      /**
       * <code>bool expires = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpires() {
        copyOnWrite();
        instance.clearExpires();
        return this;
      }

      /**
       * <code>uint32 ttl = 4;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public int getTtl() {
        return instance.getTtl();
      }
      /**
       * <code>uint32 ttl = 4;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(int value) {
        copyOnWrite();
        instance.setTtl(value);
        return this;
      }
      /**
       * <code>uint32 ttl = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        copyOnWrite();
        instance.clearTtl();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.RefreshResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "client_",
              "version_",
              "expires_",
              "ttl_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u0007\u0004\u000b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.RefreshResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult DEFAULT_INSTANCE;
    static {
      RefreshResult defaultInstance = new RefreshResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RefreshResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RefreshResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RefreshResult> PARSER;

    public static com.google.protobuf.Parser<RefreshResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.SubscribeRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>string token = 2;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <code>string token = 2;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>bool recover = 3;</code>
     * @return The recover.
     */
    boolean getRecover();

    /**
     * <code>uint32 seq = 4;</code>
     * @return The seq.
     */
    int getSeq();

    /**
     * <code>uint32 gen = 5;</code>
     * @return The gen.
     */
    int getGen();

    /**
     * <code>string epoch = 6;</code>
     * @return The epoch.
     */
    java.lang.String getEpoch();
    /**
     * <code>string epoch = 6;</code>
     * @return The bytes for epoch.
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>uint64 offset = 7;</code>
     * @return The offset.
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code protocol.SubscribeRequest}
   */
  public  static final class SubscribeRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeRequest, SubscribeRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.SubscribeRequest)
      SubscribeRequestOrBuilder {
    private SubscribeRequest() {
      channel_ = "";
      token_ = "";
      epoch_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static final int TOKEN_FIELD_NUMBER = 2;
    private java.lang.String token_;
    /**
     * <code>string token = 2;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      return token_;
    }
    /**
     * <code>string token = 2;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(token_);
    }
    /**
     * <code>string token = 2;</code>
     * @param value The token to set.
     */
    private void setToken(
        java.lang.String value) {
      value.getClass();
  
      token_ = value;
    }
    /**
     * <code>string token = 2;</code>
     */
    private void clearToken() {
      
      token_ = getDefaultInstance().getToken();
    }
    /**
     * <code>string token = 2;</code>
     * @param value The bytes for token to set.
     */
    private void setTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      token_ = value.toStringUtf8();
      
    }

    public static final int RECOVER_FIELD_NUMBER = 3;
    private boolean recover_;
    /**
     * <code>bool recover = 3;</code>
     * @return The recover.
     */
    @java.lang.Override
    public boolean getRecover() {
      return recover_;
    }
    /**
     * <code>bool recover = 3;</code>
     * @param value The recover to set.
     */
    private void setRecover(boolean value) {
      
      recover_ = value;
    }
    /**
     * <code>bool recover = 3;</code>
     */
    private void clearRecover() {
      
      recover_ = false;
    }

    public static final int SEQ_FIELD_NUMBER = 4;
    private int seq_;
    /**
     * <code>uint32 seq = 4;</code>
     * @return The seq.
     */
    @java.lang.Override
    public int getSeq() {
      return seq_;
    }
    /**
     * <code>uint32 seq = 4;</code>
     * @param value The seq to set.
     */
    private void setSeq(int value) {
      
      seq_ = value;
    }
    /**
     * <code>uint32 seq = 4;</code>
     */
    private void clearSeq() {
      
      seq_ = 0;
    }

    public static final int GEN_FIELD_NUMBER = 5;
    private int gen_;
    /**
     * <code>uint32 gen = 5;</code>
     * @return The gen.
     */
    @java.lang.Override
    public int getGen() {
      return gen_;
    }
    /**
     * <code>uint32 gen = 5;</code>
     * @param value The gen to set.
     */
    private void setGen(int value) {
      
      gen_ = value;
    }
    /**
     * <code>uint32 gen = 5;</code>
     */
    private void clearGen() {
      
      gen_ = 0;
    }

    public static final int EPOCH_FIELD_NUMBER = 6;
    private java.lang.String epoch_;
    /**
     * <code>string epoch = 6;</code>
     * @return The epoch.
     */
    @java.lang.Override
    public java.lang.String getEpoch() {
      return epoch_;
    }
    /**
     * <code>string epoch = 6;</code>
     * @return The bytes for epoch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(epoch_);
    }
    /**
     * <code>string epoch = 6;</code>
     * @param value The epoch to set.
     */
    private void setEpoch(
        java.lang.String value) {
      value.getClass();
  
      epoch_ = value;
    }
    /**
     * <code>string epoch = 6;</code>
     */
    private void clearEpoch() {
      
      epoch_ = getDefaultInstance().getEpoch();
    }
    /**
     * <code>string epoch = 6;</code>
     * @param value The bytes for epoch to set.
     */
    private void setEpochBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      epoch_ = value.toStringUtf8();
      
    }

    public static final int OFFSET_FIELD_NUMBER = 7;
    private long offset_;
    /**
     * <code>uint64 offset = 7;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 7;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 7;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.SubscribeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.SubscribeRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      /**
       * <code>string token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        return instance.getToken();
      }
      /**
       * <code>string token = 2;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return instance.getTokenBytes();
      }
      /**
       * <code>string token = 2;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setToken(value);
        return this;
      }
      /**
       * <code>string token = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>string token = 2;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenBytes(value);
        return this;
      }

      /**
       * <code>bool recover = 3;</code>
       * @return The recover.
       */
      @java.lang.Override
      public boolean getRecover() {
        return instance.getRecover();
      }
      /**
       * <code>bool recover = 3;</code>
       * @param value The recover to set.
       * @return This builder for chaining.
       */
      public Builder setRecover(boolean value) {
        copyOnWrite();
        instance.setRecover(value);
        return this;
      }
      /**
       * <code>bool recover = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecover() {
        copyOnWrite();
        instance.clearRecover();
        return this;
      }

      /**
       * <code>uint32 seq = 4;</code>
       * @return The seq.
       */
      @java.lang.Override
      public int getSeq() {
        return instance.getSeq();
      }
      /**
       * <code>uint32 seq = 4;</code>
       * @param value The seq to set.
       * @return This builder for chaining.
       */
      public Builder setSeq(int value) {
        copyOnWrite();
        instance.setSeq(value);
        return this;
      }
      /**
       * <code>uint32 seq = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeq() {
        copyOnWrite();
        instance.clearSeq();
        return this;
      }

      /**
       * <code>uint32 gen = 5;</code>
       * @return The gen.
       */
      @java.lang.Override
      public int getGen() {
        return instance.getGen();
      }
      /**
       * <code>uint32 gen = 5;</code>
       * @param value The gen to set.
       * @return This builder for chaining.
       */
      public Builder setGen(int value) {
        copyOnWrite();
        instance.setGen(value);
        return this;
      }
      /**
       * <code>uint32 gen = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGen() {
        copyOnWrite();
        instance.clearGen();
        return this;
      }

      /**
       * <code>string epoch = 6;</code>
       * @return The epoch.
       */
      @java.lang.Override
      public java.lang.String getEpoch() {
        return instance.getEpoch();
      }
      /**
       * <code>string epoch = 6;</code>
       * @return The bytes for epoch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEpochBytes() {
        return instance.getEpochBytes();
      }
      /**
       * <code>string epoch = 6;</code>
       * @param value The epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpoch(
          java.lang.String value) {
        copyOnWrite();
        instance.setEpoch(value);
        return this;
      }
      /**
       * <code>string epoch = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpoch() {
        copyOnWrite();
        instance.clearEpoch();
        return this;
      }
      /**
       * <code>string epoch = 6;</code>
       * @param value The bytes for epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEpochBytes(value);
        return this;
      }

      /**
       * <code>uint64 offset = 7;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 7;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.SubscribeRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
              "token_",
              "recover_",
              "seq_",
              "gen_",
              "epoch_",
              "offset_",
            };
            java.lang.String info =
                "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "\u0003\u0007\u0004\u000b\u0005\u000b\u0006\u0208\u0007\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.SubscribeRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest DEFAULT_INSTANCE;
    static {
      SubscribeRequest defaultInstance = new SubscribeRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeRequest> PARSER;

    public static com.google.protobuf.Parser<SubscribeRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubscribeResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.SubscribeResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bool expires = 1;</code>
     * @return The expires.
     */
    boolean getExpires();

    /**
     * <code>uint32 ttl = 2;</code>
     * @return The ttl.
     */
    int getTtl();

    /**
     * <code>bool recoverable = 3;</code>
     * @return The recoverable.
     */
    boolean getRecoverable();

    /**
     * <code>uint32 seq = 4;</code>
     * @return The seq.
     */
    int getSeq();

    /**
     * <code>uint32 gen = 5;</code>
     * @return The gen.
     */
    int getGen();

    /**
     * <code>string epoch = 6;</code>
     * @return The epoch.
     */
    java.lang.String getEpoch();
    /**
     * <code>string epoch = 6;</code>
     * @return The bytes for epoch.
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> 
        getPublicationsList();
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index);
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    int getPublicationsCount();

    /**
     * <code>bool recovered = 8;</code>
     * @return The recovered.
     */
    boolean getRecovered();

    /**
     * <code>uint64 offset = 9;</code>
     * @return The offset.
     */
    long getOffset();

    /**
     * <code>bool positioned = 10;</code>
     * @return The positioned.
     */
    boolean getPositioned();

    /**
     * <code>bytes data = 11;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.SubscribeResult}
   */
  public  static final class SubscribeResult extends
      com.google.protobuf.GeneratedMessageLite<
          SubscribeResult, SubscribeResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.SubscribeResult)
      SubscribeResultOrBuilder {
    private SubscribeResult() {
      epoch_ = "";
      publications_ = emptyProtobufList();
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int EXPIRES_FIELD_NUMBER = 1;
    private boolean expires_;
    /**
     * <code>bool expires = 1;</code>
     * @return The expires.
     */
    @java.lang.Override
    public boolean getExpires() {
      return expires_;
    }
    /**
     * <code>bool expires = 1;</code>
     * @param value The expires to set.
     */
    private void setExpires(boolean value) {
      
      expires_ = value;
    }
    /**
     * <code>bool expires = 1;</code>
     */
    private void clearExpires() {
      
      expires_ = false;
    }

    public static final int TTL_FIELD_NUMBER = 2;
    private int ttl_;
    /**
     * <code>uint32 ttl = 2;</code>
     * @return The ttl.
     */
    @java.lang.Override
    public int getTtl() {
      return ttl_;
    }
    /**
     * <code>uint32 ttl = 2;</code>
     * @param value The ttl to set.
     */
    private void setTtl(int value) {
      
      ttl_ = value;
    }
    /**
     * <code>uint32 ttl = 2;</code>
     */
    private void clearTtl() {
      
      ttl_ = 0;
    }

    public static final int RECOVERABLE_FIELD_NUMBER = 3;
    private boolean recoverable_;
    /**
     * <code>bool recoverable = 3;</code>
     * @return The recoverable.
     */
    @java.lang.Override
    public boolean getRecoverable() {
      return recoverable_;
    }
    /**
     * <code>bool recoverable = 3;</code>
     * @param value The recoverable to set.
     */
    private void setRecoverable(boolean value) {
      
      recoverable_ = value;
    }
    /**
     * <code>bool recoverable = 3;</code>
     */
    private void clearRecoverable() {
      
      recoverable_ = false;
    }

    public static final int SEQ_FIELD_NUMBER = 4;
    private int seq_;
    /**
     * <code>uint32 seq = 4;</code>
     * @return The seq.
     */
    @java.lang.Override
    public int getSeq() {
      return seq_;
    }
    /**
     * <code>uint32 seq = 4;</code>
     * @param value The seq to set.
     */
    private void setSeq(int value) {
      
      seq_ = value;
    }
    /**
     * <code>uint32 seq = 4;</code>
     */
    private void clearSeq() {
      
      seq_ = 0;
    }

    public static final int GEN_FIELD_NUMBER = 5;
    private int gen_;
    /**
     * <code>uint32 gen = 5;</code>
     * @return The gen.
     */
    @java.lang.Override
    public int getGen() {
      return gen_;
    }
    /**
     * <code>uint32 gen = 5;</code>
     * @param value The gen to set.
     */
    private void setGen(int value) {
      
      gen_ = value;
    }
    /**
     * <code>uint32 gen = 5;</code>
     */
    private void clearGen() {
      
      gen_ = 0;
    }

    public static final int EPOCH_FIELD_NUMBER = 6;
    private java.lang.String epoch_;
    /**
     * <code>string epoch = 6;</code>
     * @return The epoch.
     */
    @java.lang.Override
    public java.lang.String getEpoch() {
      return epoch_;
    }
    /**
     * <code>string epoch = 6;</code>
     * @return The bytes for epoch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(epoch_);
    }
    /**
     * <code>string epoch = 6;</code>
     * @param value The epoch to set.
     */
    private void setEpoch(
        java.lang.String value) {
      value.getClass();
  
      epoch_ = value;
    }
    /**
     * <code>string epoch = 6;</code>
     */
    private void clearEpoch() {
      
      epoch_ = getDefaultInstance().getEpoch();
    }
    /**
     * <code>string epoch = 6;</code>
     * @param value The bytes for epoch to set.
     */
    private void setEpochBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      epoch_ = value.toStringUtf8();
      
    }

    public static final int PUBLICATIONS_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.ProtobufList<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> publications_;
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    @java.lang.Override
    public java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> getPublicationsList() {
      return publications_;
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    public java.util.List<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublicationOrBuilder> 
        getPublicationsOrBuilderList() {
      return publications_;
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    @java.lang.Override
    public int getPublicationsCount() {
      return publications_.size();
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index) {
      return publications_.get(index);
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublicationOrBuilder getPublicationsOrBuilder(
        int index) {
      return publications_.get(index);
    }
    private void ensurePublicationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> tmp = publications_;
      if (!tmp.isModifiable()) {
        publications_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void setPublications(
        int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.set(index, value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void addPublications(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.add(value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void addPublications(
        int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.add(index, value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void addAllPublications(
        java.lang.Iterable<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> values) {
      ensurePublicationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, publications_);
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void clearPublications() {
      publications_ = emptyProtobufList();
    }
    /**
     * <code>repeated .protocol.Publication publications = 7;</code>
     */
    private void removePublications(int index) {
      ensurePublicationsIsMutable();
      publications_.remove(index);
    }

    public static final int RECOVERED_FIELD_NUMBER = 8;
    private boolean recovered_;
    /**
     * <code>bool recovered = 8;</code>
     * @return The recovered.
     */
    @java.lang.Override
    public boolean getRecovered() {
      return recovered_;
    }
    /**
     * <code>bool recovered = 8;</code>
     * @param value The recovered to set.
     */
    private void setRecovered(boolean value) {
      
      recovered_ = value;
    }
    /**
     * <code>bool recovered = 8;</code>
     */
    private void clearRecovered() {
      
      recovered_ = false;
    }

    public static final int OFFSET_FIELD_NUMBER = 9;
    private long offset_;
    /**
     * <code>uint64 offset = 9;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 9;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 9;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static final int POSITIONED_FIELD_NUMBER = 10;
    private boolean positioned_;
    /**
     * <code>bool positioned = 10;</code>
     * @return The positioned.
     */
    @java.lang.Override
    public boolean getPositioned() {
      return positioned_;
    }
    /**
     * <code>bool positioned = 10;</code>
     * @param value The positioned to set.
     */
    private void setPositioned(boolean value) {
      
      positioned_ = value;
    }
    /**
     * <code>bool positioned = 10;</code>
     */
    private void clearPositioned() {
      
      positioned_ = false;
    }

    public static final int DATA_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 11;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 11;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 11;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.SubscribeResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.SubscribeResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bool expires = 1;</code>
       * @return The expires.
       */
      @java.lang.Override
      public boolean getExpires() {
        return instance.getExpires();
      }
      /**
       * <code>bool expires = 1;</code>
       * @param value The expires to set.
       * @return This builder for chaining.
       */
      public Builder setExpires(boolean value) {
        copyOnWrite();
        instance.setExpires(value);
        return this;
      }
      /**
       * <code>bool expires = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpires() {
        copyOnWrite();
        instance.clearExpires();
        return this;
      }

      /**
       * <code>uint32 ttl = 2;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public int getTtl() {
        return instance.getTtl();
      }
      /**
       * <code>uint32 ttl = 2;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(int value) {
        copyOnWrite();
        instance.setTtl(value);
        return this;
      }
      /**
       * <code>uint32 ttl = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        copyOnWrite();
        instance.clearTtl();
        return this;
      }

      /**
       * <code>bool recoverable = 3;</code>
       * @return The recoverable.
       */
      @java.lang.Override
      public boolean getRecoverable() {
        return instance.getRecoverable();
      }
      /**
       * <code>bool recoverable = 3;</code>
       * @param value The recoverable to set.
       * @return This builder for chaining.
       */
      public Builder setRecoverable(boolean value) {
        copyOnWrite();
        instance.setRecoverable(value);
        return this;
      }
      /**
       * <code>bool recoverable = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecoverable() {
        copyOnWrite();
        instance.clearRecoverable();
        return this;
      }

      /**
       * <code>uint32 seq = 4;</code>
       * @return The seq.
       */
      @java.lang.Override
      public int getSeq() {
        return instance.getSeq();
      }
      /**
       * <code>uint32 seq = 4;</code>
       * @param value The seq to set.
       * @return This builder for chaining.
       */
      public Builder setSeq(int value) {
        copyOnWrite();
        instance.setSeq(value);
        return this;
      }
      /**
       * <code>uint32 seq = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeq() {
        copyOnWrite();
        instance.clearSeq();
        return this;
      }

      /**
       * <code>uint32 gen = 5;</code>
       * @return The gen.
       */
      @java.lang.Override
      public int getGen() {
        return instance.getGen();
      }
      /**
       * <code>uint32 gen = 5;</code>
       * @param value The gen to set.
       * @return This builder for chaining.
       */
      public Builder setGen(int value) {
        copyOnWrite();
        instance.setGen(value);
        return this;
      }
      /**
       * <code>uint32 gen = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGen() {
        copyOnWrite();
        instance.clearGen();
        return this;
      }

      /**
       * <code>string epoch = 6;</code>
       * @return The epoch.
       */
      @java.lang.Override
      public java.lang.String getEpoch() {
        return instance.getEpoch();
      }
      /**
       * <code>string epoch = 6;</code>
       * @return The bytes for epoch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEpochBytes() {
        return instance.getEpochBytes();
      }
      /**
       * <code>string epoch = 6;</code>
       * @param value The epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpoch(
          java.lang.String value) {
        copyOnWrite();
        instance.setEpoch(value);
        return this;
      }
      /**
       * <code>string epoch = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpoch() {
        copyOnWrite();
        instance.clearEpoch();
        return this;
      }
      /**
       * <code>string epoch = 6;</code>
       * @param value The bytes for epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEpochBytes(value);
        return this;
      }

      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      @java.lang.Override
      public java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> getPublicationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPublicationsList());
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      @java.lang.Override
      public int getPublicationsCount() {
        return instance.getPublicationsCount();
      }/**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index) {
        return instance.getPublications(index);
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder setPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.setPublications(index, value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder setPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.setPublications(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder addPublications(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.addPublications(value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder addPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.addPublications(index, value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder addPublications(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.addPublications(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder addPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.addPublications(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder addAllPublications(
          java.lang.Iterable<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> values) {
        copyOnWrite();
        instance.addAllPublications(values);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder clearPublications() {
        copyOnWrite();
        instance.clearPublications();
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 7;</code>
       */
      public Builder removePublications(int index) {
        copyOnWrite();
        instance.removePublications(index);
        return this;
      }

      /**
       * <code>bool recovered = 8;</code>
       * @return The recovered.
       */
      @java.lang.Override
      public boolean getRecovered() {
        return instance.getRecovered();
      }
      /**
       * <code>bool recovered = 8;</code>
       * @param value The recovered to set.
       * @return This builder for chaining.
       */
      public Builder setRecovered(boolean value) {
        copyOnWrite();
        instance.setRecovered(value);
        return this;
      }
      /**
       * <code>bool recovered = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRecovered() {
        copyOnWrite();
        instance.clearRecovered();
        return this;
      }

      /**
       * <code>uint64 offset = 9;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 9;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      /**
       * <code>bool positioned = 10;</code>
       * @return The positioned.
       */
      @java.lang.Override
      public boolean getPositioned() {
        return instance.getPositioned();
      }
      /**
       * <code>bool positioned = 10;</code>
       * @param value The positioned to set.
       * @return This builder for chaining.
       */
      public Builder setPositioned(boolean value) {
        copyOnWrite();
        instance.setPositioned(value);
        return this;
      }
      /**
       * <code>bool positioned = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearPositioned() {
        copyOnWrite();
        instance.clearPositioned();
        return this;
      }

      /**
       * <code>bytes data = 11;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 11;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.SubscribeResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "expires_",
              "ttl_",
              "recoverable_",
              "seq_",
              "gen_",
              "epoch_",
              "publications_",
              io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.class,
              "recovered_",
              "offset_",
              "positioned_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u000b\u0000\u0000\u0001\u000b\u000b\u0000\u0001\u0000\u0001\u0007\u0002\u000b" +
                "\u0003\u0007\u0004\u000b\u0005\u000b\u0006\u0208\u0007\u001b\b\u0007\t\u0003\n\u0007" +
                "\u000b\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.SubscribeResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult DEFAULT_INSTANCE;
    static {
      SubscribeResult defaultInstance = new SubscribeResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubscribeResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubscribeResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubscribeResult> PARSER;

    public static com.google.protobuf.Parser<SubscribeResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubRefreshRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.SubRefreshRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>string token = 2;</code>
     * @return The token.
     */
    java.lang.String getToken();
    /**
     * <code>string token = 2;</code>
     * @return The bytes for token.
     */
    com.google.protobuf.ByteString
        getTokenBytes();
  }
  /**
   * Protobuf type {@code protocol.SubRefreshRequest}
   */
  public  static final class SubRefreshRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SubRefreshRequest, SubRefreshRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.SubRefreshRequest)
      SubRefreshRequestOrBuilder {
    private SubRefreshRequest() {
      channel_ = "";
      token_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static final int TOKEN_FIELD_NUMBER = 2;
    private java.lang.String token_;
    /**
     * <code>string token = 2;</code>
     * @return The token.
     */
    @java.lang.Override
    public java.lang.String getToken() {
      return token_;
    }
    /**
     * <code>string token = 2;</code>
     * @return The bytes for token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTokenBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(token_);
    }
    /**
     * <code>string token = 2;</code>
     * @param value The token to set.
     */
    private void setToken(
        java.lang.String value) {
      value.getClass();
  
      token_ = value;
    }
    /**
     * <code>string token = 2;</code>
     */
    private void clearToken() {
      
      token_ = getDefaultInstance().getToken();
    }
    /**
     * <code>string token = 2;</code>
     * @param value The bytes for token to set.
     */
    private void setTokenBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      token_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.SubRefreshRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.SubRefreshRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      /**
       * <code>string token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public java.lang.String getToken() {
        return instance.getToken();
      }
      /**
       * <code>string token = 2;</code>
       * @return The bytes for token.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTokenBytes() {
        return instance.getTokenBytes();
      }
      /**
       * <code>string token = 2;</code>
       * @param value The token to set.
       * @return This builder for chaining.
       */
      public Builder setToken(
          java.lang.String value) {
        copyOnWrite();
        instance.setToken(value);
        return this;
      }
      /**
       * <code>string token = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearToken() {
        copyOnWrite();
        instance.clearToken();
        return this;
      }
      /**
       * <code>string token = 2;</code>
       * @param value The bytes for token to set.
       * @return This builder for chaining.
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTokenBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.SubRefreshRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
              "token_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.SubRefreshRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest DEFAULT_INSTANCE;
    static {
      SubRefreshRequest defaultInstance = new SubRefreshRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubRefreshRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubRefreshRequest> PARSER;

    public static com.google.protobuf.Parser<SubRefreshRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SubRefreshResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.SubRefreshResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bool expires = 1;</code>
     * @return The expires.
     */
    boolean getExpires();

    /**
     * <code>uint32 ttl = 2;</code>
     * @return The ttl.
     */
    int getTtl();
  }
  /**
   * Protobuf type {@code protocol.SubRefreshResult}
   */
  public  static final class SubRefreshResult extends
      com.google.protobuf.GeneratedMessageLite<
          SubRefreshResult, SubRefreshResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.SubRefreshResult)
      SubRefreshResultOrBuilder {
    private SubRefreshResult() {
    }
    public static final int EXPIRES_FIELD_NUMBER = 1;
    private boolean expires_;
    /**
     * <code>bool expires = 1;</code>
     * @return The expires.
     */
    @java.lang.Override
    public boolean getExpires() {
      return expires_;
    }
    /**
     * <code>bool expires = 1;</code>
     * @param value The expires to set.
     */
    private void setExpires(boolean value) {
      
      expires_ = value;
    }
    /**
     * <code>bool expires = 1;</code>
     */
    private void clearExpires() {
      
      expires_ = false;
    }

    public static final int TTL_FIELD_NUMBER = 2;
    private int ttl_;
    /**
     * <code>uint32 ttl = 2;</code>
     * @return The ttl.
     */
    @java.lang.Override
    public int getTtl() {
      return ttl_;
    }
    /**
     * <code>uint32 ttl = 2;</code>
     * @param value The ttl to set.
     */
    private void setTtl(int value) {
      
      ttl_ = value;
    }
    /**
     * <code>uint32 ttl = 2;</code>
     */
    private void clearTtl() {
      
      ttl_ = 0;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.SubRefreshResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.SubRefreshResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bool expires = 1;</code>
       * @return The expires.
       */
      @java.lang.Override
      public boolean getExpires() {
        return instance.getExpires();
      }
      /**
       * <code>bool expires = 1;</code>
       * @param value The expires to set.
       * @return This builder for chaining.
       */
      public Builder setExpires(boolean value) {
        copyOnWrite();
        instance.setExpires(value);
        return this;
      }
      /**
       * <code>bool expires = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpires() {
        copyOnWrite();
        instance.clearExpires();
        return this;
      }

      /**
       * <code>uint32 ttl = 2;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public int getTtl() {
        return instance.getTtl();
      }
      /**
       * <code>uint32 ttl = 2;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(int value) {
        copyOnWrite();
        instance.setTtl(value);
        return this;
      }
      /**
       * <code>uint32 ttl = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        copyOnWrite();
        instance.clearTtl();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.SubRefreshResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "expires_",
              "ttl_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0007\u0002\u000b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.SubRefreshResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult DEFAULT_INSTANCE;
    static {
      SubRefreshResult defaultInstance = new SubRefreshResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SubRefreshResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SubRefreshResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SubRefreshResult> PARSER;

    public static com.google.protobuf.Parser<SubRefreshResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnsubscribeRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.UnsubscribeRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();
  }
  /**
   * Protobuf type {@code protocol.UnsubscribeRequest}
   */
  public  static final class UnsubscribeRequest extends
      com.google.protobuf.GeneratedMessageLite<
          UnsubscribeRequest, UnsubscribeRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.UnsubscribeRequest)
      UnsubscribeRequestOrBuilder {
    private UnsubscribeRequest() {
      channel_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.UnsubscribeRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.UnsubscribeRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.UnsubscribeRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.UnsubscribeRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest DEFAULT_INSTANCE;
    static {
      UnsubscribeRequest defaultInstance = new UnsubscribeRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UnsubscribeRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UnsubscribeRequest> PARSER;

    public static com.google.protobuf.Parser<UnsubscribeRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UnsubscribeResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.UnsubscribeResult)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code protocol.UnsubscribeResult}
   */
  public  static final class UnsubscribeResult extends
      com.google.protobuf.GeneratedMessageLite<
          UnsubscribeResult, UnsubscribeResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.UnsubscribeResult)
      UnsubscribeResultOrBuilder {
    private UnsubscribeResult() {
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.UnsubscribeResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.UnsubscribeResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:protocol.UnsubscribeResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.UnsubscribeResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult DEFAULT_INSTANCE;
    static {
      UnsubscribeResult defaultInstance = new UnsubscribeResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UnsubscribeResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.UnsubscribeResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UnsubscribeResult> PARSER;

    public static com.google.protobuf.Parser<UnsubscribeResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PublishRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PublishRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.PublishRequest}
   */
  public  static final class PublishRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PublishRequest, PublishRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PublishRequest)
      PublishRequestOrBuilder {
    private PublishRequest() {
      channel_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 2;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 2;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PublishRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PublishRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      /**
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PublishRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\n" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PublishRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest DEFAULT_INSTANCE;
    static {
      PublishRequest defaultInstance = new PublishRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PublishRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PublishRequest> PARSER;

    public static com.google.protobuf.Parser<PublishRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PublishResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PublishResult)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code protocol.PublishResult}
   */
  public  static final class PublishResult extends
      com.google.protobuf.GeneratedMessageLite<
          PublishResult, PublishResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PublishResult)
      PublishResultOrBuilder {
    private PublishResult() {
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PublishResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PublishResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:protocol.PublishResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PublishResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult DEFAULT_INSTANCE;
    static {
      PublishResult defaultInstance = new PublishResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PublishResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublishResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PublishResult> PARSER;

    public static com.google.protobuf.Parser<PublishResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PresenceRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PresenceRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();
  }
  /**
   * Protobuf type {@code protocol.PresenceRequest}
   */
  public  static final class PresenceRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PresenceRequest, PresenceRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PresenceRequest)
      PresenceRequestOrBuilder {
    private PresenceRequest() {
      channel_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PresenceRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PresenceRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PresenceRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PresenceRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest DEFAULT_INSTANCE;
    static {
      PresenceRequest defaultInstance = new PresenceRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PresenceRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PresenceRequest> PARSER;

    public static com.google.protobuf.Parser<PresenceRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PresenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PresenceResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    int getPresenceCount();
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    boolean containsPresence(
        java.lang.String key);
    /**
     * Use {@link #getPresenceMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>
    getPresence();
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>
    getPresenceMap();
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo defaultValue);
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */

    io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code protocol.PresenceResult}
   */
  public  static final class PresenceResult extends
      com.google.protobuf.GeneratedMessageLite<
          PresenceResult, PresenceResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PresenceResult)
      PresenceResultOrBuilder {
    private PresenceResult() {
    }
    public static final int PRESENCE_FIELD_NUMBER = 1;
    private static final class PresenceDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> presence_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>
    internalGetPresence() {
      return presence_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>
    internalGetMutablePresence() {
      if (!presence_.isMutable()) {
        presence_ = presence_.mutableCopy();
      }
      return presence_;
    }
    @java.lang.Override

    public int getPresenceCount() {
      return internalGetPresence().size();
    }
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    @java.lang.Override

    public boolean containsPresence(
        java.lang.String key) {
      key.getClass();
      return internalGetPresence().containsKey(key);
    }
    /**
     * Use {@link #getPresenceMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> getPresence() {
      return getPresenceMap();
    }
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> getPresenceMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetPresence());
    }
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrDefault(
        java.lang.String key,
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> map =
          internalGetPresence();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    @java.lang.Override

    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> map =
          internalGetPresence();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
     */
    private java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo>
    getMutablePresenceMap() {
      return internalGetMutablePresence();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PresenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PresenceResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      @java.lang.Override

      public int getPresenceCount() {
        return instance.getPresenceMap().size();
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      @java.lang.Override

      public boolean containsPresence(
          java.lang.String key) {
        key.getClass();
        return instance.getPresenceMap().containsKey(key);
      }

      public Builder clearPresence() {
        copyOnWrite();
        instance.getMutablePresenceMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */

      public Builder removePresence(
          java.lang.String key) {
        key.getClass();
        copyOnWrite();
        instance.getMutablePresenceMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getPresenceMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> getPresence() {
        return getPresenceMap();
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> getPresenceMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getPresenceMap());
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrDefault(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo defaultValue) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> map =
            instance.getPresenceMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      @java.lang.Override

      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo getPresenceOrThrow(
          java.lang.String key) {
        key.getClass();
        java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> map =
            instance.getPresenceMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      public Builder putPresence(
          java.lang.String key,
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo value) {
        key.getClass();
        value.getClass();
        copyOnWrite();
        instance.getMutablePresenceMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .protocol.ClientInfo&gt; presence = 1;</code>
       */
      public Builder putAllPresence(
          java.util.Map<java.lang.String, io.github.centrifugal.centrifuge.internal.protocol.Protocol.ClientInfo> values) {
        copyOnWrite();
        instance.getMutablePresenceMap().putAll(values);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PresenceResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "presence_",
              PresenceDefaultEntryHolder.defaultEntry,
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u00012";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PresenceResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult DEFAULT_INSTANCE;
    static {
      PresenceResult defaultInstance = new PresenceResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PresenceResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PresenceResult> PARSER;

    public static com.google.protobuf.Parser<PresenceResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PresenceStatsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PresenceStatsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();
  }
  /**
   * Protobuf type {@code protocol.PresenceStatsRequest}
   */
  public  static final class PresenceStatsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PresenceStatsRequest, PresenceStatsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PresenceStatsRequest)
      PresenceStatsRequestOrBuilder {
    private PresenceStatsRequest() {
      channel_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PresenceStatsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PresenceStatsRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PresenceStatsRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0208";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PresenceStatsRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest DEFAULT_INSTANCE;
    static {
      PresenceStatsRequest defaultInstance = new PresenceStatsRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PresenceStatsRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PresenceStatsRequest> PARSER;

    public static com.google.protobuf.Parser<PresenceStatsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PresenceStatsResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PresenceStatsResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 num_clients = 1;</code>
     * @return The numClients.
     */
    int getNumClients();

    /**
     * <code>uint32 num_users = 2;</code>
     * @return The numUsers.
     */
    int getNumUsers();
  }
  /**
   * Protobuf type {@code protocol.PresenceStatsResult}
   */
  public  static final class PresenceStatsResult extends
      com.google.protobuf.GeneratedMessageLite<
          PresenceStatsResult, PresenceStatsResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PresenceStatsResult)
      PresenceStatsResultOrBuilder {
    private PresenceStatsResult() {
    }
    public static final int NUM_CLIENTS_FIELD_NUMBER = 1;
    private int numClients_;
    /**
     * <code>uint32 num_clients = 1;</code>
     * @return The numClients.
     */
    @java.lang.Override
    public int getNumClients() {
      return numClients_;
    }
    /**
     * <code>uint32 num_clients = 1;</code>
     * @param value The numClients to set.
     */
    private void setNumClients(int value) {
      
      numClients_ = value;
    }
    /**
     * <code>uint32 num_clients = 1;</code>
     */
    private void clearNumClients() {
      
      numClients_ = 0;
    }

    public static final int NUM_USERS_FIELD_NUMBER = 2;
    private int numUsers_;
    /**
     * <code>uint32 num_users = 2;</code>
     * @return The numUsers.
     */
    @java.lang.Override
    public int getNumUsers() {
      return numUsers_;
    }
    /**
     * <code>uint32 num_users = 2;</code>
     * @param value The numUsers to set.
     */
    private void setNumUsers(int value) {
      
      numUsers_ = value;
    }
    /**
     * <code>uint32 num_users = 2;</code>
     */
    private void clearNumUsers() {
      
      numUsers_ = 0;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PresenceStatsResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PresenceStatsResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 num_clients = 1;</code>
       * @return The numClients.
       */
      @java.lang.Override
      public int getNumClients() {
        return instance.getNumClients();
      }
      /**
       * <code>uint32 num_clients = 1;</code>
       * @param value The numClients to set.
       * @return This builder for chaining.
       */
      public Builder setNumClients(int value) {
        copyOnWrite();
        instance.setNumClients(value);
        return this;
      }
      /**
       * <code>uint32 num_clients = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumClients() {
        copyOnWrite();
        instance.clearNumClients();
        return this;
      }

      /**
       * <code>uint32 num_users = 2;</code>
       * @return The numUsers.
       */
      @java.lang.Override
      public int getNumUsers() {
        return instance.getNumUsers();
      }
      /**
       * <code>uint32 num_users = 2;</code>
       * @param value The numUsers to set.
       * @return This builder for chaining.
       */
      public Builder setNumUsers(int value) {
        copyOnWrite();
        instance.setNumUsers(value);
        return this;
      }
      /**
       * <code>uint32 num_users = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumUsers() {
        copyOnWrite();
        instance.clearNumUsers();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.PresenceStatsResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "numClients_",
              "numUsers_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u000b\u0002\u000b" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PresenceStatsResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult DEFAULT_INSTANCE;
    static {
      PresenceStatsResult defaultInstance = new PresenceStatsResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PresenceStatsResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PresenceStatsResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PresenceStatsResult> PARSER;

    public static com.google.protobuf.Parser<PresenceStatsResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HistoryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.HistoryRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    java.lang.String getChannel();
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    /**
     * <code>bool use_since = 2;</code>
     * @return The useSince.
     */
    boolean getUseSince();

    /**
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    long getOffset();

    /**
     * <code>string epoch = 4;</code>
     * @return The epoch.
     */
    java.lang.String getEpoch();
    /**
     * <code>string epoch = 4;</code>
     * @return The bytes for epoch.
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>bool use_limit = 5;</code>
     * @return The useLimit.
     */
    boolean getUseLimit();

    /**
     * <code>int32 limit = 6;</code>
     * @return The limit.
     */
    int getLimit();
  }
  /**
   * Protobuf type {@code protocol.HistoryRequest}
   */
  public  static final class HistoryRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HistoryRequest, HistoryRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.HistoryRequest)
      HistoryRequestOrBuilder {
    private HistoryRequest() {
      channel_ = "";
      epoch_ = "";
    }
    public static final int CHANNEL_FIELD_NUMBER = 1;
    private java.lang.String channel_;
    /**
     * <code>string channel = 1;</code>
     * @return The channel.
     */
    @java.lang.Override
    public java.lang.String getChannel() {
      return channel_;
    }
    /**
     * <code>string channel = 1;</code>
     * @return The bytes for channel.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChannelBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(channel_);
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The channel to set.
     */
    private void setChannel(
        java.lang.String value) {
      value.getClass();
  
      channel_ = value;
    }
    /**
     * <code>string channel = 1;</code>
     */
    private void clearChannel() {
      
      channel_ = getDefaultInstance().getChannel();
    }
    /**
     * <code>string channel = 1;</code>
     * @param value The bytes for channel to set.
     */
    private void setChannelBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      channel_ = value.toStringUtf8();
      
    }

    public static final int USE_SINCE_FIELD_NUMBER = 2;
    private boolean useSince_;
    /**
     * <code>bool use_since = 2;</code>
     * @return The useSince.
     */
    @java.lang.Override
    public boolean getUseSince() {
      return useSince_;
    }
    /**
     * <code>bool use_since = 2;</code>
     * @param value The useSince to set.
     */
    private void setUseSince(boolean value) {
      
      useSince_ = value;
    }
    /**
     * <code>bool use_since = 2;</code>
     */
    private void clearUseSince() {
      
      useSince_ = false;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private long offset_;
    /**
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 3;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 3;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static final int EPOCH_FIELD_NUMBER = 4;
    private java.lang.String epoch_;
    /**
     * <code>string epoch = 4;</code>
     * @return The epoch.
     */
    @java.lang.Override
    public java.lang.String getEpoch() {
      return epoch_;
    }
    /**
     * <code>string epoch = 4;</code>
     * @return The bytes for epoch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(epoch_);
    }
    /**
     * <code>string epoch = 4;</code>
     * @param value The epoch to set.
     */
    private void setEpoch(
        java.lang.String value) {
      value.getClass();
  
      epoch_ = value;
    }
    /**
     * <code>string epoch = 4;</code>
     */
    private void clearEpoch() {
      
      epoch_ = getDefaultInstance().getEpoch();
    }
    /**
     * <code>string epoch = 4;</code>
     * @param value The bytes for epoch to set.
     */
    private void setEpochBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      epoch_ = value.toStringUtf8();
      
    }

    public static final int USE_LIMIT_FIELD_NUMBER = 5;
    private boolean useLimit_;
    /**
     * <code>bool use_limit = 5;</code>
     * @return The useLimit.
     */
    @java.lang.Override
    public boolean getUseLimit() {
      return useLimit_;
    }
    /**
     * <code>bool use_limit = 5;</code>
     * @param value The useLimit to set.
     */
    private void setUseLimit(boolean value) {
      
      useLimit_ = value;
    }
    /**
     * <code>bool use_limit = 5;</code>
     */
    private void clearUseLimit() {
      
      useLimit_ = false;
    }

    public static final int LIMIT_FIELD_NUMBER = 6;
    private int limit_;
    /**
     * <code>int32 limit = 6;</code>
     * @return The limit.
     */
    @java.lang.Override
    public int getLimit() {
      return limit_;
    }
    /**
     * <code>int32 limit = 6;</code>
     * @param value The limit to set.
     */
    private void setLimit(int value) {
      
      limit_ = value;
    }
    /**
     * <code>int32 limit = 6;</code>
     */
    private void clearLimit() {
      
      limit_ = 0;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.HistoryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.HistoryRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>string channel = 1;</code>
       * @return The channel.
       */
      @java.lang.Override
      public java.lang.String getChannel() {
        return instance.getChannel();
      }
      /**
       * <code>string channel = 1;</code>
       * @return The bytes for channel.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getChannelBytes() {
        return instance.getChannelBytes();
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannel(
          java.lang.String value) {
        copyOnWrite();
        instance.setChannel(value);
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannel() {
        copyOnWrite();
        instance.clearChannel();
        return this;
      }
      /**
       * <code>string channel = 1;</code>
       * @param value The bytes for channel to set.
       * @return This builder for chaining.
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChannelBytes(value);
        return this;
      }

      /**
       * <code>bool use_since = 2;</code>
       * @return The useSince.
       */
      @java.lang.Override
      public boolean getUseSince() {
        return instance.getUseSince();
      }
      /**
       * <code>bool use_since = 2;</code>
       * @param value The useSince to set.
       * @return This builder for chaining.
       */
      public Builder setUseSince(boolean value) {
        copyOnWrite();
        instance.setUseSince(value);
        return this;
      }
      /**
       * <code>bool use_since = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseSince() {
        copyOnWrite();
        instance.clearUseSince();
        return this;
      }

      /**
       * <code>uint64 offset = 3;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 3;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      /**
       * <code>string epoch = 4;</code>
       * @return The epoch.
       */
      @java.lang.Override
      public java.lang.String getEpoch() {
        return instance.getEpoch();
      }
      /**
       * <code>string epoch = 4;</code>
       * @return The bytes for epoch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEpochBytes() {
        return instance.getEpochBytes();
      }
      /**
       * <code>string epoch = 4;</code>
       * @param value The epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpoch(
          java.lang.String value) {
        copyOnWrite();
        instance.setEpoch(value);
        return this;
      }
      /**
       * <code>string epoch = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpoch() {
        copyOnWrite();
        instance.clearEpoch();
        return this;
      }
      /**
       * <code>string epoch = 4;</code>
       * @param value The bytes for epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEpochBytes(value);
        return this;
      }

      /**
       * <code>bool use_limit = 5;</code>
       * @return The useLimit.
       */
      @java.lang.Override
      public boolean getUseLimit() {
        return instance.getUseLimit();
      }
      /**
       * <code>bool use_limit = 5;</code>
       * @param value The useLimit to set.
       * @return This builder for chaining.
       */
      public Builder setUseLimit(boolean value) {
        copyOnWrite();
        instance.setUseLimit(value);
        return this;
      }
      /**
       * <code>bool use_limit = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseLimit() {
        copyOnWrite();
        instance.clearUseLimit();
        return this;
      }

      /**
       * <code>int32 limit = 6;</code>
       * @return The limit.
       */
      @java.lang.Override
      public int getLimit() {
        return instance.getLimit();
      }
      /**
       * <code>int32 limit = 6;</code>
       * @param value The limit to set.
       * @return This builder for chaining.
       */
      public Builder setLimit(int value) {
        copyOnWrite();
        instance.setLimit(value);
        return this;
      }
      /**
       * <code>int32 limit = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLimit() {
        copyOnWrite();
        instance.clearLimit();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.HistoryRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "channel_",
              "useSince_",
              "offset_",
              "epoch_",
              "useLimit_",
              "limit_",
            };
            java.lang.String info =
                "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u0208\u0002\u0007" +
                "\u0003\u0003\u0004\u0208\u0005\u0007\u0006\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.HistoryRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest DEFAULT_INSTANCE;
    static {
      HistoryRequest defaultInstance = new HistoryRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HistoryRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HistoryRequest> PARSER;

    public static com.google.protobuf.Parser<HistoryRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HistoryResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.HistoryResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> 
        getPublicationsList();
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index);
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    int getPublicationsCount();

    /**
     * <code>string epoch = 2;</code>
     * @return The epoch.
     */
    java.lang.String getEpoch();
    /**
     * <code>string epoch = 2;</code>
     * @return The bytes for epoch.
     */
    com.google.protobuf.ByteString
        getEpochBytes();

    /**
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code protocol.HistoryResult}
   */
  public  static final class HistoryResult extends
      com.google.protobuf.GeneratedMessageLite<
          HistoryResult, HistoryResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.HistoryResult)
      HistoryResultOrBuilder {
    private HistoryResult() {
      publications_ = emptyProtobufList();
      epoch_ = "";
    }
    public static final int PUBLICATIONS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> publications_;
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> getPublicationsList() {
      return publications_;
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    public java.util.List<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublicationOrBuilder> 
        getPublicationsOrBuilderList() {
      return publications_;
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    @java.lang.Override
    public int getPublicationsCount() {
      return publications_.size();
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    @java.lang.Override
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index) {
      return publications_.get(index);
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    public io.github.centrifugal.centrifuge.internal.protocol.Protocol.PublicationOrBuilder getPublicationsOrBuilder(
        int index) {
      return publications_.get(index);
    }
    private void ensurePublicationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> tmp = publications_;
      if (!tmp.isModifiable()) {
        publications_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void setPublications(
        int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.set(index, value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void addPublications(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.add(value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void addPublications(
        int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
      value.getClass();
  ensurePublicationsIsMutable();
      publications_.add(index, value);
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void addAllPublications(
        java.lang.Iterable<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> values) {
      ensurePublicationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, publications_);
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void clearPublications() {
      publications_ = emptyProtobufList();
    }
    /**
     * <code>repeated .protocol.Publication publications = 1;</code>
     */
    private void removePublications(int index) {
      ensurePublicationsIsMutable();
      publications_.remove(index);
    }

    public static final int EPOCH_FIELD_NUMBER = 2;
    private java.lang.String epoch_;
    /**
     * <code>string epoch = 2;</code>
     * @return The epoch.
     */
    @java.lang.Override
    public java.lang.String getEpoch() {
      return epoch_;
    }
    /**
     * <code>string epoch = 2;</code>
     * @return The bytes for epoch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEpochBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(epoch_);
    }
    /**
     * <code>string epoch = 2;</code>
     * @param value The epoch to set.
     */
    private void setEpoch(
        java.lang.String value) {
      value.getClass();
  
      epoch_ = value;
    }
    /**
     * <code>string epoch = 2;</code>
     */
    private void clearEpoch() {
      
      epoch_ = getDefaultInstance().getEpoch();
    }
    /**
     * <code>string epoch = 2;</code>
     * @param value The bytes for epoch to set.
     */
    private void setEpochBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      epoch_ = value.toStringUtf8();
      
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private long offset_;
    /**
     * <code>uint64 offset = 3;</code>
     * @return The offset.
     */
    @java.lang.Override
    public long getOffset() {
      return offset_;
    }
    /**
     * <code>uint64 offset = 3;</code>
     * @param value The offset to set.
     */
    private void setOffset(long value) {
      
      offset_ = value;
    }
    /**
     * <code>uint64 offset = 3;</code>
     */
    private void clearOffset() {
      
      offset_ = 0L;
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.HistoryResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.HistoryResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      @java.lang.Override
      public java.util.List<io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> getPublicationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getPublicationsList());
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      @java.lang.Override
      public int getPublicationsCount() {
        return instance.getPublicationsCount();
      }/**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      @java.lang.Override
      public io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication getPublications(int index) {
        return instance.getPublications(index);
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder setPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.setPublications(index, value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder setPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.setPublications(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder addPublications(io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.addPublications(value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder addPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication value) {
        copyOnWrite();
        instance.addPublications(index, value);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder addPublications(
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.addPublications(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder addPublications(
          int index, io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.Builder builderForValue) {
        copyOnWrite();
        instance.addPublications(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder addAllPublications(
          java.lang.Iterable<? extends io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication> values) {
        copyOnWrite();
        instance.addAllPublications(values);
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder clearPublications() {
        copyOnWrite();
        instance.clearPublications();
        return this;
      }
      /**
       * <code>repeated .protocol.Publication publications = 1;</code>
       */
      public Builder removePublications(int index) {
        copyOnWrite();
        instance.removePublications(index);
        return this;
      }

      /**
       * <code>string epoch = 2;</code>
       * @return The epoch.
       */
      @java.lang.Override
      public java.lang.String getEpoch() {
        return instance.getEpoch();
      }
      /**
       * <code>string epoch = 2;</code>
       * @return The bytes for epoch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getEpochBytes() {
        return instance.getEpochBytes();
      }
      /**
       * <code>string epoch = 2;</code>
       * @param value The epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpoch(
          java.lang.String value) {
        copyOnWrite();
        instance.setEpoch(value);
        return this;
      }
      /**
       * <code>string epoch = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEpoch() {
        copyOnWrite();
        instance.clearEpoch();
        return this;
      }
      /**
       * <code>string epoch = 2;</code>
       * @param value The bytes for epoch to set.
       * @return This builder for chaining.
       */
      public Builder setEpochBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setEpochBytes(value);
        return this;
      }

      /**
       * <code>uint64 offset = 3;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return instance.getOffset();
      }
      /**
       * <code>uint64 offset = 3;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        copyOnWrite();
        instance.setOffset(value);
        return this;
      }
      /**
       * <code>uint64 offset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        copyOnWrite();
        instance.clearOffset();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.HistoryResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "publications_",
              io.github.centrifugal.centrifuge.internal.protocol.Protocol.Publication.class,
              "epoch_",
              "offset_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u001b\u0002\u0208" +
                "\u0003\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.HistoryResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult DEFAULT_INSTANCE;
    static {
      HistoryResult defaultInstance = new HistoryResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HistoryResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.HistoryResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HistoryResult> PARSER;

    public static com.google.protobuf.Parser<HistoryResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PingRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PingRequest)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code protocol.PingRequest}
   */
  public  static final class PingRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PingRequest, PingRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PingRequest)
      PingRequestOrBuilder {
    private PingRequest() {
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PingRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PingRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:protocol.PingRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PingRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest DEFAULT_INSTANCE;
    static {
      PingRequest defaultInstance = new PingRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PingRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PingRequest> PARSER;

    public static com.google.protobuf.Parser<PingRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PingResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.PingResult)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code protocol.PingResult}
   */
  public  static final class PingResult extends
      com.google.protobuf.GeneratedMessageLite<
          PingResult, PingResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.PingResult)
      PingResultOrBuilder {
    private PingResult() {
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.PingResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.PingResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:protocol.PingResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = null;java.lang.String info =
                "\u0000\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.PingResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult DEFAULT_INSTANCE;
    static {
      PingResult defaultInstance = new PingResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PingResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.PingResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PingResult> PARSER;

    public static com.google.protobuf.Parser<PingResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RPCRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RPCRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>string method = 2;</code>
     * @return The method.
     */
    java.lang.String getMethod();
    /**
     * <code>string method = 2;</code>
     * @return The bytes for method.
     */
    com.google.protobuf.ByteString
        getMethodBytes();
  }
  /**
   * Protobuf type {@code protocol.RPCRequest}
   */
  public  static final class RPCRequest extends
      com.google.protobuf.GeneratedMessageLite<
          RPCRequest, RPCRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.RPCRequest)
      RPCRequestOrBuilder {
    private RPCRequest() {
      data_ = com.google.protobuf.ByteString.EMPTY;
      method_ = "";
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private java.lang.String method_;
    /**
     * <code>string method = 2;</code>
     * @return The method.
     */
    @java.lang.Override
    public java.lang.String getMethod() {
      return method_;
    }
    /**
     * <code>string method = 2;</code>
     * @return The bytes for method.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(method_);
    }
    /**
     * <code>string method = 2;</code>
     * @param value The method to set.
     */
    private void setMethod(
        java.lang.String value) {
      value.getClass();
  
      method_ = value;
    }
    /**
     * <code>string method = 2;</code>
     */
    private void clearMethod() {
      
      method_ = getDefaultInstance().getMethod();
    }
    /**
     * <code>string method = 2;</code>
     * @param value The bytes for method to set.
     */
    private void setMethodBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      method_ = value.toStringUtf8();
      
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.RPCRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RPCRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      /**
       * <code>string method = 2;</code>
       * @return The method.
       */
      @java.lang.Override
      public java.lang.String getMethod() {
        return instance.getMethod();
      }
      /**
       * <code>string method = 2;</code>
       * @return The bytes for method.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMethodBytes() {
        return instance.getMethodBytes();
      }
      /**
       * <code>string method = 2;</code>
       * @param value The method to set.
       * @return This builder for chaining.
       */
      public Builder setMethod(
          java.lang.String value) {
        copyOnWrite();
        instance.setMethod(value);
        return this;
      }
      /**
       * <code>string method = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }
      /**
       * <code>string method = 2;</code>
       * @param value The bytes for method to set.
       * @return This builder for chaining.
       */
      public Builder setMethodBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMethodBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.RPCRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "data_",
              "method_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\n\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.RPCRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest DEFAULT_INSTANCE;
    static {
      RPCRequest defaultInstance = new RPCRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RPCRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RPCRequest> PARSER;

    public static com.google.protobuf.Parser<RPCRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RPCResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.RPCResult)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.RPCResult}
   */
  public  static final class RPCResult extends
      com.google.protobuf.GeneratedMessageLite<
          RPCResult, RPCResult.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.RPCResult)
      RPCResultOrBuilder {
    private RPCResult() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.RPCResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.RPCResult)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResultOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.RPCResult)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "data_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.RPCResult)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult DEFAULT_INSTANCE;
    static {
      RPCResult defaultInstance = new RPCResult();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        RPCResult.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.RPCResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RPCResult> PARSER;

    public static com.google.protobuf.Parser<RPCResult> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SendRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protocol.SendRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code protocol.SendRequest}
   */
  public  static final class SendRequest extends
      com.google.protobuf.GeneratedMessageLite<
          SendRequest, SendRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:protocol.SendRequest)
      SendRequestOrBuilder {
    private SendRequest() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code protocol.SendRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:protocol.SendRequest)
        io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequestOrBuilder {
      // Construct using io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.SendRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "data_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest> parser = PARSER;
          if (parser == null) {
            synchronized (io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:protocol.SendRequest)
    private static final io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest DEFAULT_INSTANCE;
    static {
      SendRequest defaultInstance = new SendRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SendRequest.class, defaultInstance);
    }

    public static io.github.centrifugal.centrifuge.internal.protocol.Protocol.SendRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SendRequest> PARSER;

    public static com.google.protobuf.Parser<SendRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
