package io.github.centrifugal.centrifuge;

import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;

import static org.junit.Assert.*;


public class FossilTest {

    @Test
    public void testApplyDelta() throws Exception {
        // Test 1
        String source1_str = "{\"asks\":[[\"609590\",\"3792.6\"],[\"609600\",\"11507.8\"],[\"609640\",\"663.11\"],"
                + "[\"609690\",\"302.71\"],[\"609700\",\"744.52\"],[\"609730\",\"209.94\"],"
                + "[\"609750\",\"18.59\"],[\"609790\",\"156\"],[\"609800\",\"859.03\"],[\"609830\","
                + "\"216.98\"],[\"609860\",\"217.42\"],[\"609870\",\"60\"],[\"609880\",\"384.06\"],"
                + "[\"609890\",\"4615.87\"],[\"609900\",\"25.98\"],[\"609940\",\"63.95\"],[\"609950\","
                + "\"242.6\"],[\"609960\",\"2000\"],[\"609970\",\"1573\"],[\"609980\",\"47.56\"],"
                + "[\"609990\",\"582.26\"],[\"610000\",\"42899.13\"],[\"610020\",\"24.46\"],"
                + "[\"610110\",\"150\"]],"
                + "\"bids\":[[\"609520\",\"2010.12\"],[\"609510\",\"5080.7\"],[\"609500\",\"297.5\"],"
                + "[\"609490\",\"1238.52\"],[\"609480\",\"896.37\"],[\"609470\",\"1234.91\"],"
                + "[\"609460\",\"451.36\"],[\"609250\",\"58.45\"],[\"609220\",\"786.48\"],"
                + "[\"609200\",\"101.64\"],[\"609190\",\"41.03\"],[\"609160\",\"650.49\"],"
                + "[\"609100\",\"6932.07\"],[\"609070\",\"16.59\"],[\"609050\",\"149.22\"],"
                + "[\"609040\",\"52.53\"],[\"609030\",\"11.52\"],[\"609020\",\"1038.35\"],"
                + "[\"609010\",\"334.83\"],[\"609000\",\"3453.95\"],[\"608900\",\"850.81\"],"
                + "[\"608880\",\"57\"],[\"608850\",\"5.47\"],[\"608840\",\"41.23\"]],"
                + "\"lastTradePrice\":\"609520\",\"lastUpdate\":1727632299611}";

        String delta1_str = "Fm\n7i@0,6:1852.77s@7o,7:303488}3~2wv0;";

        String out1 = "{\"asks\":[[\"609590\",\"3792.6\"],[\"609600\",\"11507.8\"],[\"609640\",\"663.11\"],"
                + "[\"609690\",\"302.71\"],[\"609700\",\"744.52\"],[\"609730\",\"209.94\"],"
                + "[\"609750\",\"18.59\"],[\"609790\",\"156\"],[\"609800\",\"859.03\"],"
                + "[\"609830\",\"216.98\"],[\"609860\",\"217.42\"],[\"609870\",\"60\"],"
                + "[\"609880\",\"384.06\"],[\"609890\",\"4615.87\"],[\"609900\",\"25.98\"],"
                + "[\"609940\",\"63.95\"],[\"609950\",\"242.6\"],[\"609960\",\"2000\"],"
                + "[\"609970\",\"1573\"],[\"609980\",\"47.56\"],[\"609990\",\"582.26\"],"
                + "[\"610000\",\"42899.13\"],[\"610020\",\"24.46\"],[\"610110\",\"150\"]],"
                + "\"bids\":[[\"609520\",\"1852.72\"],[\"609510\",\"5080.7\"],[\"609500\",\"297.5\"],"
                + "[\"609490\",\"1238.52\"],[\"609480\",\"896.37\"],[\"609470\",\"1234.91\"],"
                + "[\"609460\",\"451.36\"],[\"609250\",\"58.45\"],[\"609220\",\"786.48\"],"
                + "[\"609200\",\"101.64\"],[\"609190\",\"41.03\"],[\"609160\",\"650.49\"],"
                + "[\"609100\",\"6932.07\"],[\"609070\",\"16.59\"],[\"609050\",\"149.22\"],"
                + "[\"609040\",\"52.53\"],[\"609030\",\"11.52\"],[\"609020\",\"1038.35\"],"
                + "[\"609010\",\"334.83\"],[\"609000\",\"3453.95\"],[\"608900\",\"850.81\"],"
                + "[\"608880\",\"57\"],[\"608850\",\"5.47\"],[\"608840\",\"41.23\"]],"
                + "\"lastTradePrice\":\"609520\",\"lastUpdate\":1727632303488}";

        byte[] result_bytes = Fossil.applyDelta(
                source1_str.getBytes("UTF-8"),
                delta1_str.getBytes("UTF-8")
        );
        assertEquals(out1, new String(result_bytes, "UTF-8"));

        // Test 2
        String source2_str = "{\"asks\":[[\"610480\",\"26.96\"],[\"610490\",\"32.76\"],[\"610500\",\"622.44\"],"
                + "[\"610530\",\"238.7\"],[\"610540\",\"990.9\"],[\"610830\",\"33\"],"
                + "[\"610840\",\"159.9\"],[\"610880\",\"100\"],[\"610890\",\"33\"],"
                + "[\"610900\",\"913.87\"],[\"610920\",\"30.52\"],[\"610970\",\"480.74\"],"
                + "[\"610980\",\"1500\"],[\"610990\",\"266.61\"],[\"611000\",\"9672.99\"],"
                + "[\"611100\",\"404.63\"],[\"611150\",\"56.25\"],[\"611170\",\"2011.71\"],"
                + "[\"611200\",\"25.2\"],[\"611210\",\"10.17\"],[\"611240\",\"150\"],"
                + "[\"611320\",\"8.27\"],[\"611350\",\"76.6\"],[\"611400\",\"777.8\"]],"
                + "\"bids\":[[\"610360\",\"115.64\"],[\"610350\",\"525.38\"],[\"610340\",\"575.77\"],"
                + "[\"610330\",\"421.83\"],[\"610320\",\"1943.17\"],[\"610310\",\"241.36\"],"
                + "[\"610300\",\"3186.21\"],[\"610080\",\"418.23\"],[\"610050\",\"167.12\"],"
                + "[\"610030\",\"30\"],[\"610010\",\"31.14\"],[\"610000\",\"2989.86\"],"
                + "[\"609920\",\"85.04\"],[\"609910\",\"58.72\"],[\"609900\",\"2.05\"],"
                + "[\"609730\",\"50\"],[\"609700\",\"729.81\"],[\"609690\",\"3608.06\"],"
                + "[\"609590\",\"3.48\"],[\"609580\",\"17.48\"],[\"609520\",\"163.92\"],"
                + "[\"609510\",\"500\"],[\"609500\",\"3802.96\"],[\"609460\",\"86.27\"]],"
                + "\"lastTradePrice\":\"610490\",\"lastUpdate\":1727679775574}";

        String delta2_str = "FS\nEx@0,2:36P@Ez,5:6413}icT15;";

        String out2 = "{\"asks\":[[\"610480\",\"26.96\"],[\"610490\",\"32.76\"],[\"610500\",\"622.44\"],"
                + "[\"610530\",\"238.7\"],[\"610540\",\"990.9\"],[\"610830\",\"33\"],"
                + "[\"610840\",\"159.9\"],[\"610880\",\"100\"],[\"610890\",\"33\"],"
                + "[\"610900\",\"913.87\"],[\"610920\",\"30.52\"],[\"610970\",\"480.74\"],"
                + "[\"610980\",\"1500\"],[\"610990\",\"266.61\"],[\"611000\",\"9672.99\"],"
                + "[\"611100\",\"404.63\"],[\"611150\",\"56.25\"],[\"611170\",\"2011.71\"],"
                + "[\"611200\",\"25.2\"],[\"611210\",\"10.17\"],[\"611240\",\"150\"],"
                + "[\"611320\",\"8.27\"],[\"611350\",\"76.6\"],[\"611400\",\"777.8\"]],"
                + "\"bids\":[[\"610360\",\"115.64\"],[\"610350\",\"525.38\"],[\"610340\",\"575.77\"],"
                + "[\"610330\",\"421.83\"],[\"610320\",\"1943.17\"],[\"610310\",\"241.36\"],"
                + "[\"610300\",\"3186.21\"],[\"610080\",\"418.23\"],[\"610050\",\"167.12\"],"
                + "[\"610030\",\"30\"],[\"610010\",\"31.14\"],[\"610000\",\"2989.86\"],"
                + "[\"609920\",\"85.04\"],[\"609910\",\"58.72\"],[\"609900\",\"2.05\"],"
                + "[\"609730\",\"50\"],[\"609700\",\"729.81\"],[\"609690\",\"3608.06\"],"
                + "[\"609590\",\"3.48\"],[\"609580\",\"17.48\"],[\"609520\",\"163.92\"],"
                + "[\"609510\",\"500\"],[\"609500\",\"3802.96\"],[\"609460\",\"86.27\"]],"
                + "\"lastTradePrice\":\"610360\",\"lastUpdate\":1727679776413}";

        result_bytes = Fossil.applyDelta(
                source2_str.getBytes("UTF-8"),
                delta2_str.getBytes("UTF-8")
        );
        assertEquals(out2, new String(result_bytes, "UTF-8"));

        // Test 3
        String source3_str = "{\"asks\":[[\"610350\",\"3422.1\"],[\"610380\",\"1743.7\"],[\"610400\",\"5133.73\"],"
                + "[\"610410\",\"2690.87\"],[\"610420\",\"100\"],[\"610450\",\"610.86\"],"
                + "[\"610500\",\"815.43\"],[\"610690\",\"25\"],[\"610700\",\"120.8\"],"
                + "[\"610920\",\"524.38\"],[\"610930\",\"305.51\"],[\"611000\",\"937.44\"],"
                + "[\"611060\",\"8.18\"],[\"611130\",\"69.91\"],[\"611140\",\"503\"],"
                + "[\"611150\",\"601.79\"],[\"611190\",\"15\"],[\"611200\",\"1128.36\"],"
                + "[\"611250\",\"2153.73\"],[\"611330\",\"500\"],[\"611360\",\"300\"],"
                + "[\"611400\",\"21.5\"],[\"611500\",\"637.95\"],[\"611530\",\"2\"]],"
                + "\"bids\":[[\"610320\",\"114.61\"],[\"610300\",\"491.56\"],[\"610290\",\"479\"],"
                + "[\"610260\",\"474.2\"],[\"610240\",\"427.85\"],[\"610200\",\"183.67\"],"
                + "[\"610160\",\"585.47\"],[\"610150\",\"396.31\"],[\"610140\",\"1615.92\"],"
                + "[\"610120\",\"128.73\"],[\"610100\",\"5571.63\"],[\"610040\",\"6.84\"],"
                + "[\"610000\",\"15505.56\"],[\"609930\",\"100\"],[\"609900\",\"46\"],"
                + "[\"609810\",\"150\"],[\"609750\",\"196.76\"],[\"609730\",\"50.2\"],"
                + "[\"609700\",\"411.97\"],[\"609650\",\"1640.12\"],[\"609640\",\"480.23\"],"
                + "[\"609600\",\"410.04\"],[\"609560\",\"1640.36\"],[\"609530\",\"2.14\"]],"
                + "\"lastTradePrice\":\"610350\",\"lastUpdate\":1727685711521}";

        String delta3_str = "Fa\nQ:{\"asks\":[[\"610320\",\"312.757@4v,E:0350\",\"3418.837@6x,D:0380\",\"1743.78@8W," +
                "68@r,A:],\"bids\":[6y@7g,I:,[\"609520\",\"143.57p@Eb,5:3315}3QQaIf;";

        String out3 = "{\"asks\":[[\"610320\",\"312.75\"],[\"610350\",\"3418.83\"],[\"610380\",\"1743.7\"],"
                + "[\"610400\",\"5133.73\"],[\"610410\",\"2690.87\"],[\"610420\",\"100\"],"
                + "[\"610450\",\"610.86\"],[\"610500\",\"815.43\"],[\"610690\",\"25\"],"
                + "[\"610700\",\"120.8\"],[\"610920\",\"524.38\"],[\"610930\",\"305.51\"],"
                + "[\"611000\",\"937.44\"],[\"611060\",\"8.18\"],[\"611130\",\"69.91\"],"
                + "[\"611140\",\"503\"],[\"611150\",\"601.79\"],[\"611190\",\"15\"],"
                + "[\"611200\",\"1128.36\"],[\"611250\",\"2153.73\"],[\"611330\",\"500\"],"
                + "[\"611360\",\"300\"],[\"611400\",\"21.5\"],[\"611500\",\"637.95\"]],"
                + "\"bids\":[[\"610300\",\"491.56\"],[\"610290\",\"479\"],[\"610260\",\"474.2\"],"
                + "[\"610240\",\"427.85\"],[\"610200\",\"183.67\"],[\"610160\",\"585.47\"],"
                + "[\"610150\",\"396.31\"],[\"610140\",\"1615.92\"],[\"610120\",\"128.73\"],"
                + "[\"610100\",\"5571.63\"],[\"610040\",\"6.84\"],[\"610000\",\"15505.56\"],"
                + "[\"609930\",\"100\"],[\"609900\",\"46\"],[\"609810\",\"150\"],"
                + "[\"609750\",\"196.76\"],[\"609730\",\"50.2\"],[\"609700\",\"411.97\"],"
                + "[\"609650\",\"1640.12\"],[\"609640\",\"480.23\"],[\"609600\",\"410.04\"],"
                + "[\"609560\",\"1640.36\"],[\"609530\",\"2.14\"],[\"609520\",\"143.57\"]],"
                + "\"lastTradePrice\":\"610350\",\"lastUpdate\":1727685713315}";

        result_bytes = Fossil.applyDelta(
                source3_str.getBytes("UTF-8"),
                delta3_str.getBytes("UTF-8")
        );
        assertEquals(out3, new String(result_bytes, "UTF-8"));

        // Test 4
        String source4_str = "{\"asks\":[[\"610390\",\"600.45\"],[\"610400\",\"118.16\"],[\"610410\",\"2450.9\"],"
                + "[\"610420\",\"100\"],[\"610450\",\"413.91\"],[\"610490\",\"20\"],"
                + "[\"610500\",\"865.43\"],[\"610690\",\"25\"],[\"610700\",\"120.8\"],"
                + "[\"610800\",\"325.49\"],[\"610900\",\"43\"],[\"610930\",\"386.35\"],"
                + "[\"610980\",\"25\"],[\"610990\",\"1304.18\"],[\"611000\",\"6729.02\"],"
                + "[\"611060\",\"8.18\"],[\"611140\",\"105\"],[\"611150\",\"601.79\"],"
                + "[\"611190\",\"15\"],[\"611200\",\"1118.36\"],[\"611250\",\"2253.63\"],"
                + "[\"611330\",\"500\"],[\"611350\",\"200.66\"],[\"611360\",\"300\"]],"
                + "\"bids\":[[\"610260\",\"73.51\"],[\"610250\",\"1884.19\"],[\"610240\",\"27.79\"],"
                + "[\"610230\",\"55.7\"],[\"610100\",\"88.94\"],[\"610060\",\"957.52\"],"
                + "[\"610040\",\"48.84\"],[\"610000\",\"7344.08\"],[\"609990\",\"234.11\"],"
                + "[\"609800\",\"2.1\"],[\"609720\",\"50\"],[\"609670\",\"2583.24\"],"
                + "[\"609660\",\"50.99\"],[\"609650\",\"922.5\"],[\"609640\",\"381.02\"],"
                + "[\"609600\",\"410.04\"],[\"609560\",\"1640.36\"],[\"609530\",\"2.14\"],"
                + "[\"609520\",\"143.57\"],[\"609510\",\"531.75\"],[\"609500\",\"5885.67\"],"
                + "[\"609460\",\"86.27\"],[\"609430\",\"100\"],[\"609400\",\"410.17\"]],"
                + "\"lastTradePrice\":\"610390\",\"lastUpdate\":1727688337312}";

        String delta4_str = "FO\nP@0,74@Q,5:68.377N@7Z,1:5P@Ew,5:9024}9u5zN;";

        String out4 = "{\"asks\":[[\"610390\",\"600.4\"],[\"610400\",\"118.16\"],[\"610410\",\"2450.9\"],"
                + "[\"610420\",\"100\"],[\"610450\",\"413.91\"],[\"610490\",\"20\"],"
                + "[\"610500\",\"865.43\"],[\"610690\",\"25\"],[\"610700\",\"120.8\"],"
                + "[\"610800\",\"325.49\"],[\"610900\",\"43\"],[\"610930\",\"386.35\"],"
                + "[\"610980\",\"25\"],[\"610990\",\"1304.18\"],[\"611000\",\"6729.02\"],"
                + "[\"611060\",\"8.18\"],[\"611140\",\"105\"],[\"611150\",\"601.79\"],"
                + "[\"611190\",\"15\"],[\"611200\",\"1118.36\"],[\"611250\",\"2253.63\"],"
                + "[\"611330\",\"500\"],[\"611350\",\"200.66\"],[\"611360\",\"300\"]],"
                + "\"bids\":[[\"610260\",\"68.37\"],[\"610250\",\"1884.19\"],[\"610240\",\"27.79\"],"
                + "[\"610230\",\"55.7\"],[\"610100\",\"88.94\"],[\"610060\",\"957.52\"],"
                + "[\"610040\",\"48.84\"],[\"610000\",\"7344.08\"],[\"609990\",\"234.11\"],"
                + "[\"609800\",\"2.1\"],[\"609720\",\"50\"],[\"609670\",\"2583.24\"],"
                + "[\"609660\",\"50.99\"],[\"609650\",\"922.5\"],[\"609640\",\"381.02\"],"
                + "[\"609600\",\"410.04\"],[\"609560\",\"1640.36\"],[\"609530\",\"2.14\"],"
                + "[\"609520\",\"143.57\"],[\"609510\",\"531.75\"],[\"609500\",\"5885.67\"],"
                + "[\"609460\",\"86.27\"],[\"609430\",\"100\"],[\"609400\",\"410.17\"]],"
                + "\"lastTradePrice\":\"610350\",\"lastUpdate\":1727688339024}";

        result_bytes = Fossil.applyDelta(
                source4_str.getBytes("UTF-8"),
                delta4_str.getBytes("UTF-8")
        );
        assertEquals(out4, new String(result_bytes, "UTF-8"));

        // Test 5
        // source5_str is out4
        String source5_str = out4;
        String delta5_str = "FP\nK@0,6:593.1775@P,4:0.517N@7Y,1:9Q@Ev,4:892}1bjQuR;";

        String out5 = "{\"asks\":[[\"610390\",\"593.17\"],[\"610400\",\"118.16\"],[\"610410\",\"2450.9\"],"
                + "[\"610420\",\"100\"],[\"610450\",\"413.91\"],[\"610490\",\"20\"],"
                + "[\"610500\",\"865.43\"],[\"610690\",\"25\"],[\"610700\",\"120.8\"],"
                + "[\"610800\",\"325.49\"],[\"610900\",\"43\"],[\"610930\",\"386.35\"],"
                + "[\"610980\",\"25\"],[\"610990\",\"1304.18\"],[\"611000\",\"6729.02\"],"
                + "[\"611060\",\"8.18\"],[\"611140\",\"105\"],[\"611150\",\"601.79\"],"
                + "[\"611190\",\"15\"],[\"611200\",\"1118.36\"],[\"611250\",\"2253.63\"],"
                + "[\"611330\",\"500\"],[\"611350\",\"200.66\"],[\"611360\",\"300\"]],"
                + "\"bids\":[[\"610260\",\"60.51\"],[\"610250\",\"1884.19\"],[\"610240\",\"27.79\"],"
                + "[\"610230\",\"55.7\"],[\"610100\",\"88.94\"],[\"610060\",\"957.52\"],"
                + "[\"610040\",\"48.84\"],[\"610000\",\"7344.08\"],[\"609990\",\"234.11\"],"
                + "[\"609800\",\"2.1\"],[\"609720\",\"50\"],[\"609670\",\"2583.24\"],"
                + "[\"609660\",\"50.99\"],[\"609650\",\"922.5\"],[\"609640\",\"381.02\"],"
                + "[\"609600\",\"410.04\"],[\"609560\",\"1640.36\"],[\"609530\",\"2.14\"],"
                + "[\"609520\",\"143.57\"],[\"609510\",\"531.75\"],[\"609500\",\"5885.67\"],"
                + "[\"609460\",\"86.27\"],[\"609430\",\"100\"],[\"609400\",\"410.17\"]],"
                + "\"lastTradePrice\":\"610390\",\"lastUpdate\":1727688339892}";

        result_bytes = Fossil.applyDelta(
                source5_str.getBytes("UTF-8"),
                delta5_str.getBytes("UTF-8")
        );
        assertEquals(out5, new String(result_bytes, "UTF-8"));
    }

    @Test
    public void testApplyDeltaFromFiles() throws Exception {
        for (int i = 1; i <= 5; i++) {
            String dir = "data/" + i;

            byte[] origin = readResourceAsBytes(dir + "/origin");
            byte[] target = readResourceAsBytes(dir + "/target");
            byte[] delta = readResourceAsBytes(dir + "/delta");

            // Apply the delta
            byte[] applied = Fossil.applyDelta(origin, delta);

            // Assert that the applied result matches the target
            assertArrayEquals("Test case " + i + " failed", target, applied);
        }
    }

    @Test
    public void testApplyDeltaWithTruncatedDelta() throws Exception {
        String dir = "data/1";

        byte[] origin = readResourceAsBytes(dir + "/origin");
        byte[] delta = readResourceAsBytes(dir + "/delta");

        // Truncate the delta by removing the last byte
        byte[] truncatedDelta = new byte[delta.length - 1];
        System.arraycopy(delta, 0, truncatedDelta, 0, delta.length - 1);

        try {
            // Attempt to apply the truncated delta
            Fossil.applyDelta(origin, truncatedDelta);
            // If no exception is thrown, the test should fail
            fail("Expected an exception to be thrown due to truncated delta");
        } catch (Exception e) {
            // Exception is expected
        }
    }

    /**
     * Helper method to read a resource file into a byte array.
     */
    private byte[] readResourceAsBytes(String resourcePath) throws Exception {
        InputStream inputStream = getClass().getClassLoader().getResourceAsStream(resourcePath);
        if (inputStream == null) {
            throw new Exception("Resource not found: " + resourcePath);
        }

        try (ByteArrayOutputStream buffer = new ByteArrayOutputStream()) {
            byte[] data = new byte[16384]; // 16KB buffer
            int nRead;
            while ((nRead = inputStream.read(data, 0, data.length)) != -1) {
                buffer.write(data, 0, nRead);
            }
            return buffer.toByteArray();
        } finally {
            inputStream.close();
        }
    }
}
